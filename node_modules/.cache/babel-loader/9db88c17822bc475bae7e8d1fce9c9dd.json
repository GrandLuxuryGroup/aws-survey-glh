{"ast":null,"code":"var _jsxFileName = \"/Users/christophe/dev/amplify/glh-survey/src/components/SurveyComponent.js\";\nimport React, { Component } from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport { createSurvey, createTracking, createFirstLogin } from \"../graphql/mutations\";\nimport { listTrackings } from '../graphql/queries';\nimport { graphqlOperation, API } from \"aws-amplify\";\nimport { history } from '../AppWithAuth';\nimport firstSurvey from '../survey/FirstServey';\nimport finalSurvey from '../survey/FinalSurvey';\nSurvey.StylesManager.applyTheme(\"orange\");\n\nclass SurveyComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isCompleted: false,\n      finalResult: \"\"\n    };\n\n    this.onCompleteComponent = async result => {\n      try {\n        if (this.props.hotelLocation === \"\") {\n          console.log(result);\n          console.log(\"Hotel Location :  \" + result.data.HotelLocation);\n          console.log(this.props.userAttributes);\n          await API.graphql(graphqlOperation(createFirstLogin, {\n            input: {\n              'Email': this.props.userAttributes.email,\n              'Sub': this.props.userAttributes.sub,\n              'LocationHotel': result.data.HotelLocation\n            }\n          }));\n        }\n\n        const trakings = await API.graphql(graphqlOperation(listTrackings, {\n          filter: {\n            and: [{\n              Sub: {\n                eq: this.props.userAttributes.sub\n              },\n              Week: {\n                eq: 'W1'\n              }\n            }]\n          }\n        }));\n\n        if (trakings.data.listTrackings.items.length === 0) {\n          //Create a first line for tracking\n          const data = result.data;\n          console.log(data);\n          console.log(result.data['RoomsNightsSplit-total'].NbRoomNights);\n          console.log(result.data['RoomsNightsSplit-total'].NbRoomNights); //result.data['SplitTotalRoomsBusinessSegment-total'].NbRoomsNightsBS;\n          //Page1 \n          //var HotelLocation =\n\n          var IsHotelClosed = result.data.IsHotelClosed;\n          var HotelReopeningDate = result.data.HotelReopeningDate;\n          var IsHotelContainmentZone = result.data.isHotelContainmentZone;\n          var HotelContainmentEndDate = result.data.HotelContainmentEndDate; //Page 2\n\n          var NbBookings = NbBookings;\n          var NbRoomNightsBooked = NbRoomNightsBooked;\n          var NbRoomNightsCanceled = NbRoomNightsCanceled;\n          var NbRoomNightsBookedFIT = result.data['SplitTotalRoomsBusinessSegment']['FIT'].NbRoomsNightsBS;\n          var NbRoomNightsBookedMICE = result.data['SplitTotalRoomsBusinessSegment']['MICE'].NbRoomsNightsBS;\n          var NbRoomNightsBookedCorporate = result.data['SplitTotalRoomsBusinessSegment']['Corporate'].NbRoomsNightsBS;\n          var RemainingRoomNightsBySegment = result.data['SplitTotalRoomsBusinessSegment-total'].NbRoomsNightsBS;\n          var RoomNightsCountry1 = result.data['RoomsNightsSplit']['Country1'].Country;\n          var NbRoomNightsBookedCountry1 = result.data['RoomsNightsSplit']['Country1'].NbRoomNights;\n          var RoomNightsCountry2 = result.data['RoomsNightsSplit']['Country2'].Country;\n          var NbRoomNightsBookedCountry2 = result.data['RoomsNightsSplit']['Country2'].NbRoomNights;\n          var RoomNightsCountry3 = result.data['RoomsNightsSplit']['Country3'].Country;\n          var NbRoomNightsBookedCountry3 = result.data['RoomsNightsSplit']['Country3'].NbRoomNights;\n          var RoomNightsCountry2 = result.data['RoomsNightsSplit']['Country2'].Country;\n          var NbRoomNightsBookedCountry2 = result.data['RoomsNightsSplit']['Country2'].NbRoomNights;\n          var NbRoomNightsBookedLastWeekApril = result.data['SplitByMonth']['NbRoomsByMonth'].M1;\n          var NbRoomNightsBookedLastWeekMay = result.data['SplitByMonth']['NbRoomsByMonth'].M2;\n          var NbRoomNightsBookedLastWeekJune = result.data['SplitByMonth']['NbRoomsByMonth'].M3;\n          var NbRoomNightsBookedLastWeekJuly = result.data['SplitByMonth']['NbRoomsByMonth'].M4;\n          var NbRoomNightsBookedLastWeekAugust = result.data['SplitByMonth']['NbRoomsByMonth'].M5;\n          var NbRoomNightsBookedLastWeekSeptember = result.data['SplitByMonth']['NbRoomsByMonth'].M6;\n          var TotalNightsBookedLastWeek = result.data['SplitByMonth']['NbRoomsByMonth'].M7; //Page 3\n\n          var TotalNumberRoomAvailable = result.data.TotalNumberRoomAvailable;\n          var NbOccupiedRoomNightsAvril = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M1;\n          var NbOccupiedRoomNightsMay = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M2;\n          var NbOccupiedRoomNightsJune = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M3;\n          var NbOccupiedRoomNightsJuly = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M4;\n          var NbOccupiedRoomNightsAugust = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M5;\n          var NbOccupiedRoomNightsSeptember = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M6;\n          var NbTotalRoomNightsAvril = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M1;\n          var NbTotalRoomNightsMay = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M2;\n          var NbTotalRoomNightsJune = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M3;\n          var NbTotalRoomNightsJuly = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M4;\n          var NbTotalRoomNightsAugust = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M5;\n          var NbTotalRoomNightsSeptember = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M6;\n          var OccupancyRateApril = result.data['SplitTotalRoomAvailable-total'].M1;\n          var OccupancyRateMay = result.data['SplitTotalRoomAvailable-total'].M2;\n          var OccupancyRateJune = result.data['SplitTotalRoomAvailable-total'].M3;\n          var OccupancyRateJuly = result.data['SplitTotalRoomAvailable-total'].M4;\n          var OccupancyRateAugust = result.data['SplitTotalRoomAvailable-total'].M5;\n          var OccupancyRateSeptember = result.data['SplitTotalRoomAvailable-total'].M6;\n          console.log(OccupancyRateApril); //await API.graphql(graphqlOperation(createTracking, {input:{'Email':this.props.userAttributes.email, 'Sub':this.props.userAttributes.sub,'Week':'W1'}}));\n\n          await API.graphql(graphqlOperation(createSurvey, {\n            input: {\n              IsHotelClosed,\n              IsHotelContainmentZone,\n              HotelContainmentEndDate,\n              HotelReopeningDate,\n              NbBookings,\n              NbRoomNightsBooked,\n              NbRoomNightsCanceled,\n              TotalNumberRoomAvailable,\n              NbOccupiedRoomNightsAvril,\n              NbOccupiedRoomNightsAugust,\n              NbOccupiedRoomNightsJuly,\n              NbOccupiedRoomNightsJune,\n              NbOccupiedRoomNightsMay,\n              NbOccupiedRoomNightsSeptember,\n              NbTotalRoomNightsAugust,\n              NbTotalRoomNightsAvril,\n              NbTotalRoomNightsJuly,\n              NbTotalRoomNightsJune,\n              NbTotalRoomNightsMay,\n              NbTotalRoomNightsSeptember,\n              OccupancyRateApril,\n              OccupancyRateAugust,\n              OccupancyRateJuly,\n              OccupancyRateJune,\n              OccupancyRateMay,\n              OccupancyRateSeptember\n            }\n          }));\n          this.setState({\n            isCompleted: true\n          });\n          history.push('/Final');\n        } else {\n          history.push('/FinalRetry');\n        }\n      } catch (err) {\n        console.error(\"error during delete\", err);\n      }\n    };\n  }\n\n  render() {\n    var json = this.props.hotelLocation === \"\" ? firstSurvey : finalSurvey;\n    var surveyRender = !this.state.isCompleted ? /*#__PURE__*/React.createElement(Survey.Survey, {\n      json: json //data={data}\n      ,\n      showCompletedPage: false,\n      onComplete: this.onCompleteComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }) : null;\n    /*var onCompleteComponent = this.state.isCompleted ? (\n    ) : null;*/\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, surveyRender);\n  }\n\n}\n\nexport default SurveyComponent;","map":{"version":3,"sources":["/Users/christophe/dev/amplify/glh-survey/src/components/SurveyComponent.js"],"names":["React","Component","Survey","createSurvey","createTracking","createFirstLogin","listTrackings","graphqlOperation","API","history","firstSurvey","finalSurvey","StylesManager","applyTheme","SurveyComponent","state","isCompleted","finalResult","onCompleteComponent","result","props","hotelLocation","console","log","data","HotelLocation","userAttributes","graphql","input","email","sub","trakings","filter","and","Sub","eq","Week","items","length","NbRoomNights","IsHotelClosed","HotelReopeningDate","IsHotelContainmentZone","isHotelContainmentZone","HotelContainmentEndDate","NbBookings","NbRoomNightsBooked","NbRoomNightsCanceled","NbRoomNightsBookedFIT","NbRoomsNightsBS","NbRoomNightsBookedMICE","NbRoomNightsBookedCorporate","RemainingRoomNightsBySegment","RoomNightsCountry1","Country","NbRoomNightsBookedCountry1","RoomNightsCountry2","NbRoomNightsBookedCountry2","RoomNightsCountry3","NbRoomNightsBookedCountry3","NbRoomNightsBookedLastWeekApril","M1","NbRoomNightsBookedLastWeekMay","M2","NbRoomNightsBookedLastWeekJune","M3","NbRoomNightsBookedLastWeekJuly","M4","NbRoomNightsBookedLastWeekAugust","M5","NbRoomNightsBookedLastWeekSeptember","M6","TotalNightsBookedLastWeek","M7","TotalNumberRoomAvailable","NbOccupiedRoomNightsAvril","NbOccupiedRoomNightsMay","NbOccupiedRoomNightsJune","NbOccupiedRoomNightsJuly","NbOccupiedRoomNightsAugust","NbOccupiedRoomNightsSeptember","NbTotalRoomNightsAvril","NbTotalRoomNightsMay","NbTotalRoomNightsJune","NbTotalRoomNightsJuly","NbTotalRoomNightsAugust","NbTotalRoomNightsSeptember","OccupancyRateApril","OccupancyRateMay","OccupancyRateJune","OccupancyRateJuly","OccupancyRateAugust","OccupancyRateSeptember","setState","push","err","error","render","json","surveyRender"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport { createSurvey, createTracking, createFirstLogin } from \"../graphql/mutations\";\nimport { listTrackings } from '../graphql/queries';\nimport { graphqlOperation, API } from \"aws-amplify\";\nimport { history } from '../AppWithAuth';\nimport firstSurvey from '../survey/FirstServey';\nimport finalSurvey from '../survey/FinalSurvey';\n\nSurvey.StylesManager.applyTheme(\"orange\");\n\nclass SurveyComponent extends Component {\n\n  state = {\n    isCompleted : false,\n    finalResult : \"\"\n  }\n\n  onCompleteComponent = async (result) => {\n    try {\n      if (this.props.hotelLocation === \"\"){\n        console.log(result);\n        console.log(\"Hotel Location :  \" + result.data.HotelLocation);\n        console.log(this.props.userAttributes);\n        await API.graphql(graphqlOperation(createFirstLogin, {input:{'Email':this.props.userAttributes.email, 'Sub':this.props.userAttributes.sub,'LocationHotel':result.data.HotelLocation}}));\n      }\n      \n      const trakings = await API.graphql(graphqlOperation(listTrackings,  {\n          filter: {\n              and : [{\n              Sub: {\n                  eq: this.props.userAttributes.sub\n              },\n              Week:{\n                eq : 'W1'\n              }\n            }]\n          }\n        }));\n\n      if (trakings.data.listTrackings.items.length === 0) {\n        //Create a first line for tracking\n        const data = result.data;\n        console.log(data);\n        console.log(result.data['RoomsNightsSplit-total'].NbRoomNights);\n        console.log(result.data['RoomsNightsSplit-total'].NbRoomNights);\n        //result.data['SplitTotalRoomsBusinessSegment-total'].NbRoomsNightsBS;\n        //Page1 \n        //var HotelLocation =\n        var IsHotelClosed = result.data.IsHotelClosed;\n        var HotelReopeningDate = result.data.HotelReopeningDate;\n        var IsHotelContainmentZone = result.data.isHotelContainmentZone;\n        var HotelContainmentEndDate = result.data.HotelContainmentEndDate;\n\n        //Page 2\n\n        var NbBookings = NbBookings;\n        var NbRoomNightsBooked = NbRoomNightsBooked;\n        var NbRoomNightsCanceled = NbRoomNightsCanceled;\n\n        var  NbRoomNightsBookedFIT = result.data['SplitTotalRoomsBusinessSegment']['FIT'].NbRoomsNightsBS;\n        var  NbRoomNightsBookedMICE = result.data['SplitTotalRoomsBusinessSegment']['MICE'].NbRoomsNightsBS;\n        var  NbRoomNightsBookedCorporate = result.data['SplitTotalRoomsBusinessSegment']['Corporate'].NbRoomsNightsBS;\n        var  RemainingRoomNightsBySegment = result.data['SplitTotalRoomsBusinessSegment-total'].NbRoomsNightsBS;\n     \n        var  RoomNightsCountry1 = result.data['RoomsNightsSplit']['Country1'].Country;\n        var  NbRoomNightsBookedCountry1 = result.data['RoomsNightsSplit']['Country1'].NbRoomNights;\n        var  RoomNightsCountry2 = result.data['RoomsNightsSplit']['Country2'].Country;\n        var  NbRoomNightsBookedCountry2 = result.data['RoomsNightsSplit']['Country2'].NbRoomNights;\n        var  RoomNightsCountry3 = result.data['RoomsNightsSplit']['Country3'].Country;\n        var  NbRoomNightsBookedCountry3 = result.data['RoomsNightsSplit']['Country3'].NbRoomNights;\n        var  RoomNightsCountry2 = result.data['RoomsNightsSplit']['Country2'].Country;\n        var  NbRoomNightsBookedCountry2 = result.data['RoomsNightsSplit']['Country2'].NbRoomNights;\n\n        var  NbRoomNightsBookedLastWeekApril = result.data['SplitByMonth']['NbRoomsByMonth'].M1;\n        var  NbRoomNightsBookedLastWeekMay = result.data['SplitByMonth']['NbRoomsByMonth'].M2;\n        var  NbRoomNightsBookedLastWeekJune = result.data['SplitByMonth']['NbRoomsByMonth'].M3;\n        var  NbRoomNightsBookedLastWeekJuly = result.data['SplitByMonth']['NbRoomsByMonth'].M4;\n        var  NbRoomNightsBookedLastWeekAugust = result.data['SplitByMonth']['NbRoomsByMonth'].M5;\n        var  NbRoomNightsBookedLastWeekSeptember = result.data['SplitByMonth']['NbRoomsByMonth'].M6;\n        var  TotalNightsBookedLastWeek = result.data['SplitByMonth']['NbRoomsByMonth'].M7;\n        \n        //Page 3\n        var TotalNumberRoomAvailable = result.data.TotalNumberRoomAvailable;\n        var  NbOccupiedRoomNightsAvril= result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M1;\n        var  NbOccupiedRoomNightsMay=  result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M2;\n        var  NbOccupiedRoomNightsJune=  result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M3;\n        var  NbOccupiedRoomNightsJuly=  result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M4;\n        var  NbOccupiedRoomNightsAugust=  result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M5;\n        var  NbOccupiedRoomNightsSeptember=  result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M6;\n        var  NbTotalRoomNightsAvril=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M1;\n        var  NbTotalRoomNightsMay=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M2;\n        var  NbTotalRoomNightsJune=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M3;\n        var  NbTotalRoomNightsJuly=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M4;\n        var  NbTotalRoomNightsAugust=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M5;\n        var  NbTotalRoomNightsSeptember=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M6;\n        var OccupancyRateApril = result.data['SplitTotalRoomAvailable-total'].M1;\n        var OccupancyRateMay =result.data['SplitTotalRoomAvailable-total'].M2;\n        var OccupancyRateJune =result.data['SplitTotalRoomAvailable-total'].M3;\n        var OccupancyRateJuly =result.data['SplitTotalRoomAvailable-total'].M4;\n        var OccupancyRateAugust =result.data['SplitTotalRoomAvailable-total'].M5;\n        var OccupancyRateSeptember =result.data['SplitTotalRoomAvailable-total'].M6;\n        console.log(OccupancyRateApril);\n\n        //await API.graphql(graphqlOperation(createTracking, {input:{'Email':this.props.userAttributes.email, 'Sub':this.props.userAttributes.sub,'Week':'W1'}}));\n        await API.graphql(graphqlOperation(createSurvey, {input:{ IsHotelClosed, IsHotelContainmentZone, HotelContainmentEndDate, HotelReopeningDate, \n          NbBookings, NbRoomNightsBooked, NbRoomNightsCanceled,\n          TotalNumberRoomAvailable, NbOccupiedRoomNightsAvril\n          ,NbOccupiedRoomNightsAugust, NbOccupiedRoomNightsJuly, NbOccupiedRoomNightsJune, NbOccupiedRoomNightsMay, NbOccupiedRoomNightsSeptember,\n        NbTotalRoomNightsAugust, NbTotalRoomNightsAvril, NbTotalRoomNightsJuly, NbTotalRoomNightsJune, NbTotalRoomNightsMay, NbTotalRoomNightsSeptember, \n        OccupancyRateApril, OccupancyRateAugust, OccupancyRateJuly, OccupancyRateJune, OccupancyRateMay, OccupancyRateSeptember } }));\n        \n        this.setState({ isCompleted: true});\n        history.push('/Final');\n      } else {\n        history.push('/FinalRetry');\n      }\n\n\n     \n    } catch (err) {\n      console.error(\"error during delete\", err);\n    }\n  }\n\n  render() {\n\n\n   \n    var json = (this.props.hotelLocation === \"\")? firstSurvey : finalSurvey;\n    \n\n    var surveyRender = !this.state.isCompleted ? (\n      <Survey.Survey\n        json={json}\n        //data={data}\n        showCompletedPage={false}\n        onComplete={this.onCompleteComponent}\n      />\n    ) : null;\n\n    \n    /*var onCompleteComponent = this.state.isCompleted ? (\n    ) : null;*/\n\n    return (\n      <div>\n        {surveyRender}\n      </div>\n    );\n  }\n}\n\nexport default SurveyComponent;"]},"metadata":{},"sourceType":"module"}