{"ast":null,"code":"var _jsxFileName = \"/Users/christophe/dev/amplify/glh-survey/src/components/SurveyComponent.js\";\nimport React, { Component } from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport { createSurvey, createTracking, createFirstLogin } from \"../graphql/mutations\";\nimport { listTrackings } from '../graphql/queries';\nimport { graphqlOperation, API } from \"aws-amplify\";\nimport { history } from '../AppWithAuth';\nimport firstSurvey from '../survey/FirstServey';\nimport finalSurvey from '../survey/FinalSurvey';\nSurvey.StylesManager.applyTheme(\"orange\");\n\nclass SurveyComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isCompleted: false,\n      finalResult: \"\"\n    };\n\n    this.onCompleteComponent = async result => {\n      let hotelLocation = \"\";\n\n      try {\n        if (this.props.hotelLocation === \"\") {\n          hotelLocation = this.setState({\n            HotelLocation: result.data.HotelLocation\n          });\n          await API.graphql(graphqlOperation(createFirstLogin, {\n            input: {\n              'Email': this.props.userAttributes.email,\n              'Sub': this.props.userAttributes.sub,\n              'LocationHotel': result.data.HotelLocation\n            }\n          }));\n        } else {\n          this.setState({\n            HotelLocation: this.props.hotelLocation\n          });\n        }\n\n        const trakings = await API.graphql(graphqlOperation(listTrackings, {\n          filter: {\n            and: [{\n              Sub: {\n                eq: this.props.userAttributes.sub\n              },\n              Week: {\n                eq: 'W1'\n              }\n            }]\n          }\n        }));\n\n        if (trakings.data.listTrackings.items.length === 0) {\n          console.log(result.data);\n          console.log(this.state.hotelLocation);\n          var Week = 'W1'; //Page1 \n\n          var HotelLocation = this.state.hotelLocation;\n          var IsHotelClosed = result.data.IsHotelClosed;\n          var HotelReopeningDate = result.data.HotelReopeningDate;\n          var IsHotelContainmentZone = result.data.isHotelContainmentZone;\n          var HotelContainmentEndDate = result.data.HotelContainmentEndDate; //Page 2\n\n          var NbBookings = NbBookings;\n          var NbRoomNightsBooked = NbRoomNightsBooked;\n          var NbRoomNightsCanceled = NbRoomNightsCanceled;\n          var NbRoomNightsBookedFIT = result.data['SplitTotalRoomsBusinessSegment']['FIT'].NbRoomsNightsBS;\n          var NbRoomNightsBookedMICE = result.data['SplitTotalRoomsBusinessSegment']['MICE'].NbRoomsNightsBS;\n          var NbRoomNightsBookedCorporate = result.data['SplitTotalRoomsBusinessSegment']['Corporate'].NbRoomsNightsBS;\n          var RemainingRoomNightsBySegment = result.data['SplitTotalRoomsBusinessSegment-total'].NbRoomsNightsBS;\n          var RoomNightsCountry1 = result.data['RoomsNightsSplit']['Country1'].Country;\n          var NbRoomNightsBookedCountry1 = result.data['RoomsNightsSplit']['Country1'].NbRoomNights;\n          console.log(RoomNightsCountry1);\n          console.log(NbRoomNightsBookedCountry1);\n          /*var  RoomNightsCountry2 = result.data['RoomsNightsSplit']['Country2'].Country;\n          var  NbRoomNightsBookedCountry2 = result.data['RoomsNightsSplit']['Country2'].NbRoomNights;\n          var  RoomNightsCountry3 = result.data['RoomsNightsSplit']['Country3'].Country;\n          var  NbRoomNightsBookedCountry3 = result.data['RoomsNightsSplit']['Country3'].NbRoomNights;\n          var  RoomNightsCountry4 = result.data['RoomsNightsSplit']['Country4'].Country;\n          var  NbRoomNightsBookedCountry4 = result.data['RoomsNightsSplit']['Country4'].NbRoomNights;\n          var  RoomNightsCountry5 = result.data['RoomsNightsSplit']['Country5'].Country;\n          var  NbRoomNightsBookedCountry5 = result.data['RoomsNightsSplit']['Country5'].NbRoomNights;*/\n\n          var NbRoomNightsBookedLastWeekApril = result.data['SplitByMonth']['NbRoomsByMonth'].M1;\n          var NbRoomNightsBookedLastWeekMay = result.data['SplitByMonth']['NbRoomsByMonth'].M2;\n          var NbRoomNightsBookedLastWeekJune = result.data['SplitByMonth']['NbRoomsByMonth'].M3;\n          var NbRoomNightsBookedLastWeekJuly = result.data['SplitByMonth']['NbRoomsByMonth'].M4;\n          var NbRoomNightsBookedLastWeekAugust = result.data['SplitByMonth']['NbRoomsByMonth'].M5;\n          var NbRoomNightsBookedLastWeekSeptember = result.data['SplitByMonth']['NbRoomsByMonth'].M6;\n          var TotalNightsBookedLastWeek = result.data['SplitByMonth']['NbRoomsByMonth'].M7; //Page 3\n\n          var TotalNumberRoomAvailable = result.data.TotalNumberRoomAvailable;\n          var NbOccupiedRoomNightsAvril = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M1;\n          var NbOccupiedRoomNightsMay = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M2;\n          var NbOccupiedRoomNightsJune = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M3;\n          var NbOccupiedRoomNightsJuly = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M4;\n          var NbOccupiedRoomNightsAugust = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M5;\n          var NbOccupiedRoomNightsSeptember = result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M6;\n          var NbTotalRoomNightsAvril = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M1;\n          var NbTotalRoomNightsMay = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M2;\n          var NbTotalRoomNightsJune = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M3;\n          var NbTotalRoomNightsJuly = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M4;\n          var NbTotalRoomNightsAugust = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M5;\n          var NbTotalRoomNightsSeptember = result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M6;\n          var OccupancyRateApril = result.data['SplitTotalRoomAvailable-total'].M1;\n          var OccupancyRateMay = result.data['SplitTotalRoomAvailable-total'].M2;\n          var OccupancyRateJune = result.data['SplitTotalRoomAvailable-total'].M3;\n          var OccupancyRateJuly = result.data['SplitTotalRoomAvailable-total'].M4;\n          var OccupancyRateAugust = result.data['SplitTotalRoomAvailable-total'].M5;\n          var OccupancyRateSeptember = result.data['SplitTotalRoomAvailable-total'].M6; //\n\n          var Result = result.data; //await API.graphql(graphqlOperation(createTracking, {input:{'Email':this.props.userAttributes.email, 'Sub':this.props.userAttributes.sub, Week }}));\n\n          /* await API.graphql(graphqlOperation(createSurvey, {input:{ IsHotelClosed, IsHotelContainmentZone, HotelContainmentEndDate, HotelReopeningDate, \n             NbBookings, NbRoomNightsBooked, NbRoomNightsCanceled,\n             NbRoomNightsBookedFIT, NbRoomNightsBookedMICE, NbRoomNightsBookedCorporate, RemainingRoomNightsBySegment,\n             RoomNightsCountry1, NbRoomNightsBookedCountry1, RoomNightsCountry2, NbRoomNightsBookedCountry2, RoomNightsCountry3, NbRoomNightsBookedCountry3,\n             RoomNightsCountry4, NbRoomNightsBookedCountry4, RoomNightsCountry5, NbRoomNightsBookedCountry5, NbRoomNightsBookedLastWeekApril, NbRoomNightsBookedLastWeekMay,\n             NbRoomNightsBookedLastWeekAugust, NbRoomNightsBookedLastWeekSeptember, TotalNightsBookedLastWeek, NbRoomNightsBookedLastWeekJune, NbRoomNightsBookedLastWeekJuly,\n             TotalNumberRoomAvailable, NbOccupiedRoomNightsAvril,NbOccupiedRoomNightsAugust, NbOccupiedRoomNightsJuly, NbOccupiedRoomNightsJune, NbOccupiedRoomNightsMay,\n             NbOccupiedRoomNightsSeptember,NbTotalRoomNightsAugust, NbTotalRoomNightsAvril, NbTotalRoomNightsJuly, NbTotalRoomNightsJune, NbTotalRoomNightsMay, NbTotalRoomNightsSeptember, \n            OccupancyRateApril, OccupancyRateAugust, OccupancyRateJuly, OccupancyRateJune, OccupancyRateMay, OccupancyRateSeptember, Week, Result, HotelLocation\n           } }));*/\n\n          this.setState({\n            isCompleted: true\n          });\n          history.push('/Final');\n        } else {\n          history.push('/FinalRetry');\n        }\n      } catch (err) {\n        console.error(\"error during delete\", err);\n      }\n    };\n  }\n\n  render() {\n    var json = this.props.hotelLocation === \"\" ? firstSurvey : finalSurvey;\n    var surveyRender = !this.state.isCompleted ? /*#__PURE__*/React.createElement(Survey.Survey, {\n      json: json //data={data}\n      ,\n      showCompletedPage: false,\n      onComplete: this.onCompleteComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }) : null;\n    /*var onCompleteComponent = this.state.isCompleted ? (\n    ) : null;*/\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, surveyRender);\n  }\n\n}\n\nexport default SurveyComponent;","map":{"version":3,"sources":["/Users/christophe/dev/amplify/glh-survey/src/components/SurveyComponent.js"],"names":["React","Component","Survey","createSurvey","createTracking","createFirstLogin","listTrackings","graphqlOperation","API","history","firstSurvey","finalSurvey","StylesManager","applyTheme","SurveyComponent","state","isCompleted","finalResult","onCompleteComponent","result","hotelLocation","props","setState","HotelLocation","data","graphql","input","userAttributes","email","sub","trakings","filter","and","Sub","eq","Week","items","length","console","log","IsHotelClosed","HotelReopeningDate","IsHotelContainmentZone","isHotelContainmentZone","HotelContainmentEndDate","NbBookings","NbRoomNightsBooked","NbRoomNightsCanceled","NbRoomNightsBookedFIT","NbRoomsNightsBS","NbRoomNightsBookedMICE","NbRoomNightsBookedCorporate","RemainingRoomNightsBySegment","RoomNightsCountry1","Country","NbRoomNightsBookedCountry1","NbRoomNights","NbRoomNightsBookedLastWeekApril","M1","NbRoomNightsBookedLastWeekMay","M2","NbRoomNightsBookedLastWeekJune","M3","NbRoomNightsBookedLastWeekJuly","M4","NbRoomNightsBookedLastWeekAugust","M5","NbRoomNightsBookedLastWeekSeptember","M6","TotalNightsBookedLastWeek","M7","TotalNumberRoomAvailable","NbOccupiedRoomNightsAvril","NbOccupiedRoomNightsMay","NbOccupiedRoomNightsJune","NbOccupiedRoomNightsJuly","NbOccupiedRoomNightsAugust","NbOccupiedRoomNightsSeptember","NbTotalRoomNightsAvril","NbTotalRoomNightsMay","NbTotalRoomNightsJune","NbTotalRoomNightsJuly","NbTotalRoomNightsAugust","NbTotalRoomNightsSeptember","OccupancyRateApril","OccupancyRateMay","OccupancyRateJune","OccupancyRateJuly","OccupancyRateAugust","OccupancyRateSeptember","Result","push","err","error","render","json","surveyRender"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport { createSurvey, createTracking, createFirstLogin } from \"../graphql/mutations\";\nimport { listTrackings } from '../graphql/queries';\nimport { graphqlOperation, API } from \"aws-amplify\";\nimport { history } from '../AppWithAuth';\nimport firstSurvey from '../survey/FirstServey';\nimport finalSurvey from '../survey/FinalSurvey';\n\nSurvey.StylesManager.applyTheme(\"orange\");\n\nclass SurveyComponent extends Component {\n\n  state = {\n    isCompleted : false,\n    finalResult : \"\"\n  }\n\n  onCompleteComponent = async (result) => {\n    let hotelLocation=\"\";\n    try {\n      if (this.props.hotelLocation === \"\"){\n        hotelLocation = \n        this.setState({ HotelLocation : result.data.HotelLocation });\n        await API.graphql(graphqlOperation(createFirstLogin, {input:{'Email':this.props.userAttributes.email, 'Sub':this.props.userAttributes.sub,'LocationHotel':result.data.HotelLocation}}));\n      } else {\n        this.setState({ HotelLocation : this.props.hotelLocation });\n      }\n\n      const trakings = await API.graphql(graphqlOperation(listTrackings,  {\n          filter: {\n              and : [{\n              Sub: {\n                  eq: this.props.userAttributes.sub\n              },\n              Week:{\n                eq : 'W1'\n              }\n            }]\n          }\n        }));\n\n      if (trakings.data.listTrackings.items.length === 0) {\n       console.log(result.data);\n       console.log(this.state.hotelLocation);\n\n        var Week = 'W1'\n\n        //Page1 \n        var HotelLocation = this.state.hotelLocation;\n        var IsHotelClosed = result.data.IsHotelClosed;\n        var HotelReopeningDate = result.data.HotelReopeningDate;\n        var IsHotelContainmentZone = result.data.isHotelContainmentZone;\n        var HotelContainmentEndDate = result.data.HotelContainmentEndDate;\n\n        //Page 2\n\n        var NbBookings = NbBookings;\n        var NbRoomNightsBooked = NbRoomNightsBooked;\n        var NbRoomNightsCanceled = NbRoomNightsCanceled;\n\n        var  NbRoomNightsBookedFIT = result.data['SplitTotalRoomsBusinessSegment']['FIT'].NbRoomsNightsBS;\n        var  NbRoomNightsBookedMICE = result.data['SplitTotalRoomsBusinessSegment']['MICE'].NbRoomsNightsBS;\n        var  NbRoomNightsBookedCorporate = result.data['SplitTotalRoomsBusinessSegment']['Corporate'].NbRoomsNightsBS;\n        var  RemainingRoomNightsBySegment = result.data['SplitTotalRoomsBusinessSegment-total'].NbRoomsNightsBS;\n     \n        var  RoomNightsCountry1 = result.data['RoomsNightsSplit']['Country1'].Country;\n        var  NbRoomNightsBookedCountry1 = result.data['RoomsNightsSplit']['Country1'].NbRoomNights;\n        console.log(RoomNightsCountry1);\n        console.log(NbRoomNightsBookedCountry1);\n        /*var  RoomNightsCountry2 = result.data['RoomsNightsSplit']['Country2'].Country;\n        var  NbRoomNightsBookedCountry2 = result.data['RoomsNightsSplit']['Country2'].NbRoomNights;\n        var  RoomNightsCountry3 = result.data['RoomsNightsSplit']['Country3'].Country;\n        var  NbRoomNightsBookedCountry3 = result.data['RoomsNightsSplit']['Country3'].NbRoomNights;\n        var  RoomNightsCountry4 = result.data['RoomsNightsSplit']['Country4'].Country;\n        var  NbRoomNightsBookedCountry4 = result.data['RoomsNightsSplit']['Country4'].NbRoomNights;\n        var  RoomNightsCountry5 = result.data['RoomsNightsSplit']['Country5'].Country;\n        var  NbRoomNightsBookedCountry5 = result.data['RoomsNightsSplit']['Country5'].NbRoomNights;*/\n\n        var  NbRoomNightsBookedLastWeekApril = result.data['SplitByMonth']['NbRoomsByMonth'].M1;\n        var  NbRoomNightsBookedLastWeekMay = result.data['SplitByMonth']['NbRoomsByMonth'].M2;\n        var  NbRoomNightsBookedLastWeekJune = result.data['SplitByMonth']['NbRoomsByMonth'].M3;\n        var  NbRoomNightsBookedLastWeekJuly = result.data['SplitByMonth']['NbRoomsByMonth'].M4;\n        var  NbRoomNightsBookedLastWeekAugust = result.data['SplitByMonth']['NbRoomsByMonth'].M5;\n        var  NbRoomNightsBookedLastWeekSeptember = result.data['SplitByMonth']['NbRoomsByMonth'].M6;\n        var  TotalNightsBookedLastWeek = result.data['SplitByMonth']['NbRoomsByMonth'].M7;\n        \n        //Page 3\n        var TotalNumberRoomAvailable = result.data.TotalNumberRoomAvailable;\n        var  NbOccupiedRoomNightsAvril= result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M1;\n        var  NbOccupiedRoomNightsMay=  result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M2;\n        var  NbOccupiedRoomNightsJune=  result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M3;\n        var  NbOccupiedRoomNightsJuly=  result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M4;\n        var  NbOccupiedRoomNightsAugust=  result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M5;\n        var  NbOccupiedRoomNightsSeptember=  result.data['SplitTotalRoomAvailable']['NbOfOccupiedRooms'].M6;\n        var  NbTotalRoomNightsAvril=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M1;\n        var  NbTotalRoomNightsMay=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M2;\n        var  NbTotalRoomNightsJune=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M3;\n        var  NbTotalRoomNightsJuly=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M4;\n        var  NbTotalRoomNightsAugust=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M5;\n        var  NbTotalRoomNightsSeptember=  result.data['SplitTotalRoomAvailable']['TotalRoomNightAvailable'].M6;\n        var OccupancyRateApril = result.data['SplitTotalRoomAvailable-total'].M1;\n        var OccupancyRateMay =result.data['SplitTotalRoomAvailable-total'].M2;\n        var OccupancyRateJune =result.data['SplitTotalRoomAvailable-total'].M3;\n        var OccupancyRateJuly =result.data['SplitTotalRoomAvailable-total'].M4;\n        var OccupancyRateAugust =result.data['SplitTotalRoomAvailable-total'].M5;\n        var OccupancyRateSeptember =result.data['SplitTotalRoomAvailable-total'].M6;\n\n        //\n      var Result = result.data;\n        \n\n        //await API.graphql(graphqlOperation(createTracking, {input:{'Email':this.props.userAttributes.email, 'Sub':this.props.userAttributes.sub, Week }}));\n       /* await API.graphql(graphqlOperation(createSurvey, {input:{ IsHotelClosed, IsHotelContainmentZone, HotelContainmentEndDate, HotelReopeningDate, \n          NbBookings, NbRoomNightsBooked, NbRoomNightsCanceled,\n          NbRoomNightsBookedFIT, NbRoomNightsBookedMICE, NbRoomNightsBookedCorporate, RemainingRoomNightsBySegment,\n          RoomNightsCountry1, NbRoomNightsBookedCountry1, RoomNightsCountry2, NbRoomNightsBookedCountry2, RoomNightsCountry3, NbRoomNightsBookedCountry3,\n          RoomNightsCountry4, NbRoomNightsBookedCountry4, RoomNightsCountry5, NbRoomNightsBookedCountry5, NbRoomNightsBookedLastWeekApril, NbRoomNightsBookedLastWeekMay,\n          NbRoomNightsBookedLastWeekAugust, NbRoomNightsBookedLastWeekSeptember, TotalNightsBookedLastWeek, NbRoomNightsBookedLastWeekJune, NbRoomNightsBookedLastWeekJuly,\n          TotalNumberRoomAvailable, NbOccupiedRoomNightsAvril,NbOccupiedRoomNightsAugust, NbOccupiedRoomNightsJuly, NbOccupiedRoomNightsJune, NbOccupiedRoomNightsMay,\n          NbOccupiedRoomNightsSeptember,NbTotalRoomNightsAugust, NbTotalRoomNightsAvril, NbTotalRoomNightsJuly, NbTotalRoomNightsJune, NbTotalRoomNightsMay, NbTotalRoomNightsSeptember, \n         OccupancyRateApril, OccupancyRateAugust, OccupancyRateJuly, OccupancyRateJune, OccupancyRateMay, OccupancyRateSeptember, Week, Result, HotelLocation\n        } }));*/\n        \n        this.setState({ isCompleted: true});\n        history.push('/Final');\n      } else {\n        history.push('/FinalRetry');\n      }\n\n\n     \n    } catch (err) {\n      console.error(\"error during delete\", err);\n    }\n  }\n\n  render() {\n\n\n   \n    var json = (this.props.hotelLocation === \"\")? firstSurvey : finalSurvey;\n    \n\n    var surveyRender = !this.state.isCompleted ? (\n      <Survey.Survey\n        json={json}\n        //data={data}\n        showCompletedPage={false}\n        onComplete={this.onCompleteComponent}\n      />\n    ) : null;\n\n    \n    /*var onCompleteComponent = this.state.isCompleted ? (\n    ) : null;*/\n\n    return (\n      <div>\n        {surveyRender}\n      </div>\n    );\n  }\n}\n\nexport default SurveyComponent;"]},"metadata":{},"sourceType":"module"}