{"ast":null,"code":"var _jsxFileName = \"/Users/christophe/dev/amplify/glh-survey/src/components/SurveyComponent.js\";\nimport React from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\n\nclass SurveyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCompleted: false\n    };\n    this.onCompleteComponent = this.onCompleteComponent.bind(this);\n  }\n\n  onCompleteComponent() {\n    this.setState({\n      isCompleted: true\n    });\n  }\n\n  render() {\n    let json = {\n      questions: [{\n        type: \"checkbox\",\n        name: \"car\",\n        title: \"What car are you driving?\",\n        isRequired: true,\n        hasSelectAll: true,\n        hasNone: true,\n        noneText: \"None of the above\",\n        colCount: 4,\n        choicesOrder: \"asc\",\n        choices: [\"Ford\", \"Tesla\", \"Vauxhall\", \"Volkswagen\", \"Nissan\", \"Audi\", \"Mercedes-Benz\", \"BMW\", \"Peugeot\", \"Toyota\", \"Citroen\"]\n      }]\n    };\n    var surveyRender = !this.state.isCompleted ? /*#__PURE__*/React.createElement(Survey.Survey, {\n      json: json,\n      showCompletedPage: false,\n      onComplete: this.onCompleteComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }) : null;\n    var onCompleteComponent = this.state.isCompleted ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, \"The component after onComplete event\") : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, surveyRender, onCompleteComponent);\n  }\n\n}\n\nexport default SurveyComponent;","map":{"version":3,"sources":["/Users/christophe/dev/amplify/glh-survey/src/components/SurveyComponent.js"],"names":["React","Survey","SurveyComponent","Component","constructor","props","state","isCompleted","onCompleteComponent","bind","setState","render","json","questions","type","name","title","isRequired","hasSelectAll","hasNone","noneText","colCount","choicesOrder","choices","surveyRender"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;AACA,OAAO,yBAAP;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AACDD,EAAAA,mBAAmB,GAAG;AACpB,SAAKE,QAAL,CAAc;AAAEH,MAAAA,WAAW,EAAE;AAAf,KAAd;AACD;;AACDI,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAG;AACTC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,IAAI,EAAE,KAFR;AAGEC,QAAAA,KAAK,EAAE,2BAHT;AAIEC,QAAAA,UAAU,EAAE,IAJd;AAKEC,QAAAA,YAAY,EAAE,IALhB;AAMEC,QAAAA,OAAO,EAAE,IANX;AAOEC,QAAAA,QAAQ,EAAE,mBAPZ;AAQEC,QAAAA,QAAQ,EAAE,CARZ;AASEC,QAAAA,YAAY,EAAE,KAThB;AAUEC,QAAAA,OAAO,EAAE,CACP,MADO,EAEP,OAFO,EAGP,UAHO,EAIP,YAJO,EAKP,QALO,EAMP,MANO,EAOP,eAPO,EAQP,KARO,EASP,SATO,EAUP,QAVO,EAWP,SAXO;AAVX,OADS;AADF,KAAX;AA4BA,QAAIC,YAAY,GAAG,CAAC,KAAKlB,KAAL,CAAWC,WAAZ,gBACjB,oBAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAEK,IADR;AAEE,MAAA,iBAAiB,EAAE,KAFrB;AAGE,MAAA,UAAU,EAAE,KAAKJ,mBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB,GAMf,IANJ;AAOA,QAAIA,mBAAmB,GAAG,KAAKF,KAAL,CAAWC,WAAX,gBACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADwB,GAEtB,IAFJ;AAGA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiB,YADH,EAEGhB,mBAFH,CADF;AAMD;;AAtD2C;;AAyD9C,eAAeN,eAAf","sourcesContent":["import React from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\n\nclass SurveyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isCompleted: false };\n    this.onCompleteComponent = this.onCompleteComponent.bind(this);\n  }\n  onCompleteComponent() {\n    this.setState({ isCompleted: true });\n  }\n  render() {\n    let json = {\n      questions: [\n        {\n          type: \"checkbox\",\n          name: \"car\",\n          title: \"What car are you driving?\",\n          isRequired: true,\n          hasSelectAll: true,\n          hasNone: true,\n          noneText: \"None of the above\",\n          colCount: 4,\n          choicesOrder: \"asc\",\n          choices: [\n            \"Ford\",\n            \"Tesla\",\n            \"Vauxhall\",\n            \"Volkswagen\",\n            \"Nissan\",\n            \"Audi\",\n            \"Mercedes-Benz\",\n            \"BMW\",\n            \"Peugeot\",\n            \"Toyota\",\n            \"Citroen\"\n          ]\n        }\n      ]\n    };\n    var surveyRender = !this.state.isCompleted ? (\n      <Survey.Survey\n        json={json}\n        showCompletedPage={false}\n        onComplete={this.onCompleteComponent}\n      />\n    ) : null;\n    var onCompleteComponent = this.state.isCompleted ? (\n      <div>The component after onComplete event</div>\n    ) : null;\n    return (\n      <div>\n        {surveyRender}\n        {onCompleteComponent}\n      </div>\n    );\n  }\n}\n\nexport default SurveyComponent;"]},"metadata":{},"sourceType":"module"}