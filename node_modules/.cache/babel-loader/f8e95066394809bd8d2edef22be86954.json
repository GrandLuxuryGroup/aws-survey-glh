{"ast":null,"code":"var _jsxFileName = \"/Users/christophe/dev/amplify/glh-survey/src/components/SurveyComponent.js\";\nimport React from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\n\nclass SurveyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCompleted: false\n    };\n    this.onCompleteComponent = this.onCompleteComponent.bind(this);\n  }\n\n  onCompleteComponent() {\n    this.setState({\n      isCompleted: true\n    });\n  }\n\n  render() {\n    let json = {\n      title: \"Covid-19 Survey\",\n      showProgressBar: \"top\",\n      pages: [{\n        name: \"Fermeture de l'hôtel\",\n        elements: [{\n          type: \"boolean\",\n          name: \"HotelClosed\",\n          title: \"L'hôtel est-il totalement fermé ?\",\n          isRequired: true,\n          labelTrue: \"Yes\",\n          labelFalse: \"No\"\n        }, {\n          type: \"text\",\n          name: \"HotelReopenDate\",\n          visibleIf: \"{HotelClosed} = true\",\n          title: \"Si oui, date de réouverture prévue\",\n          inputType: \"date\"\n        }],\n        title: \"Fermeture de l'hôtel\"\n      }, {\n        name: \"Confinement\",\n        elements: [{\n          type: \"boolean\",\n          name: \"ConfinementZone\",\n          title: \"Votre zone géographique fait-elle l'objet d'un confinement ?\",\n          isRequired: true,\n          labelTrue: \"Yes\",\n          labelFalse: \"No\"\n        }, {\n          type: \"text\",\n          name: \"ConfinementEnd\",\n          visibleIf: \"{ConfinementZone} = true\",\n          title: \"Si oui, date de levée des confinements prévue\",\n          inputType: \"date\"\n        }],\n        title: \"Confinement\"\n      }, {\n        name: \"Nb de réservations au cours des 7 derniers jours\",\n        elements: [{\n          type: \"text\",\n          name: \"NbBookings\",\n          title: \"Nb de réservations au cours des 7 derniers jours\",\n          inputType: \"number\"\n        }, {\n          type: \"text\",\n          name: \"NbCancelation\",\n          title: \"Nb d'annulations au cours des 7 derniers jours\",\n          inputType: \"number\"\n        }],\n        title: \"Nb de réservations au cours des 7 derniers jours\"\n      }, {\n        name: \"Nationalité des clients ayant réservé au cours des 7 derniers jours ?\",\n        elements: [{\n          type: \"matrixdropdown\",\n          name: \"ClientLocation\",\n          title: \"Nationalité des clients ayant réservé au cours des 7 derniers jours ?\",\n          columns: [{\n            name: \"Nom\",\n            cellType: \"dropdown\"\n          }, {\n            name: \"Nombre\",\n            cellType: \"text\"\n          }],\n          choices: [{\n            value: \"Paris\",\n            text: \"Paris\"\n          }, {\n            value: \"Londres\",\n            text: \"Londres\"\n          }, {\n            value: \"Maroc\",\n            text: \"Maroc\"\n          }, {\n            value: \"Suisse\",\n            text: \"Suisse\"\n          }, {\n            value: \"New-York\",\n            text: \"New-York\"\n          }],\n          rows: [\"Pays #1\", \"Pays #2\", \"Pays #3\", \"Autres\"]\n        }],\n        title: \"Nationalité des clients ayant réservé au cours des 7 derniers jours ?\"\n      }, {\n        name: \"Quel business segment a réservé au cours des 7 de\",\n        elements: [{\n          type: \"multipletext\",\n          name: \"BusinessSegment\",\n          title: \"Quel business segment a réservé au cours des 7 derniers jours\",\n          items: [{\n            name: \"FIT\",\n            title: \"FIT\"\n          }, {\n            name: \"MICE\",\n            title: \"MICE\"\n          }, {\n            name: \"Corporate\",\n            title: \"Corporate\"\n          }]\n        }],\n        title: \"Quel business segment a réservé au cours des 7 de\"\n      }]\n    };\n    var surveyRender = !this.state.isCompleted ? /*#__PURE__*/React.createElement(Survey.Survey, {\n      json: json,\n      showCompletedPage: false,\n      onComplete: this.onCompleteComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }) : null;\n\n    const onCompleteComponent = result => {\n      this.state.isCompleted ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }, \"The component after onComplete event\") : null;\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }, surveyRender, onCompleteComponent);\n  }\n\n}\n\nexport default SurveyComponent;","map":{"version":3,"sources":["/Users/christophe/dev/amplify/glh-survey/src/components/SurveyComponent.js"],"names":["React","Survey","SurveyComponent","Component","constructor","props","state","isCompleted","onCompleteComponent","bind","setState","render","json","title","showProgressBar","pages","name","elements","type","isRequired","labelTrue","labelFalse","visibleIf","inputType","columns","cellType","choices","value","text","rows","items","surveyRender","result"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\n\nclass SurveyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isCompleted: false };\n    this.onCompleteComponent = this.onCompleteComponent.bind(this);\n  }\n  onCompleteComponent() {\n    this.setState({ isCompleted: true });\n  }\n  render() {\n    let json = {\n      title: \"Covid-19 Survey\",\n      showProgressBar: \"top\",\n      pages: [\n        {\n          name: \"Fermeture de l'hôtel\",\n          elements: [\n            {\n              type: \"boolean\",\n              name: \"HotelClosed\",\n              title: \"L'hôtel est-il totalement fermé ?\",\n              isRequired: true,\n              labelTrue: \"Yes\",\n              labelFalse: \"No\"\n            },\n            {\n              type: \"text\",\n              name: \"HotelReopenDate\",\n              visibleIf: \"{HotelClosed} = true\",\n              title: \"Si oui, date de réouverture prévue\",\n              inputType: \"date\"\n            }\n          ],\n          title: \"Fermeture de l'hôtel\"\n        },\n        {\n          name: \"Confinement\",\n          elements: [\n            {\n              type: \"boolean\",\n              name: \"ConfinementZone\",\n              title:\n                \"Votre zone géographique fait-elle l'objet d'un confinement ?\",\n              isRequired: true,\n              labelTrue: \"Yes\",\n              labelFalse: \"No\"\n            },\n            {\n              type: \"text\",\n              name: \"ConfinementEnd\",\n              visibleIf: \"{ConfinementZone} = true\",\n              title: \"Si oui, date de levée des confinements prévue\",\n              inputType: \"date\"\n            }\n          ],\n          title: \"Confinement\"\n        },\n        {\n          name: \"Nb de réservations au cours des 7 derniers jours\",\n          elements: [\n            {\n              type: \"text\",\n              name: \"NbBookings\",\n              title: \"Nb de réservations au cours des 7 derniers jours\",\n              inputType: \"number\"\n            },\n            {\n              type: \"text\",\n              name: \"NbCancelation\",\n              title: \"Nb d'annulations au cours des 7 derniers jours\",\n              inputType: \"number\"\n            }\n          ],\n          title: \"Nb de réservations au cours des 7 derniers jours\"\n        },\n        {\n          name:\n            \"Nationalité des clients ayant réservé au cours des 7 derniers jours ?\",\n          elements: [\n            {\n              type: \"matrixdropdown\",\n              name: \"ClientLocation\",\n              title:\n                \"Nationalité des clients ayant réservé au cours des 7 derniers jours ?\",\n              columns: [\n                {\n                  name: \"Nom\",\n                  cellType: \"dropdown\"\n                },\n                {\n                  name: \"Nombre\",\n                  cellType: \"text\"\n                }\n              ],\n              choices: [\n                {\n                  value: \"Paris\",\n                  text: \"Paris\"\n                },\n                {\n                  value: \"Londres\",\n                  text: \"Londres\"\n                },\n                {\n                  value: \"Maroc\",\n                  text: \"Maroc\"\n                },\n                {\n                  value: \"Suisse\",\n                  text: \"Suisse\"\n                },\n                {\n                  value: \"New-York\",\n                  text: \"New-York\"\n                }\n              ],\n              rows: [\"Pays #1\", \"Pays #2\", \"Pays #3\", \"Autres\"]\n            }\n          ],\n          title:\n            \"Nationalité des clients ayant réservé au cours des 7 derniers jours ?\"\n        },\n        {\n          name: \"Quel business segment a réservé au cours des 7 de\",\n          elements: [\n            {\n              type: \"multipletext\",\n              name: \"BusinessSegment\",\n              title:\n                \"Quel business segment a réservé au cours des 7 derniers jours\",\n              items: [\n                {\n                  name: \"FIT\",\n                  title: \"FIT\"\n                },\n                {\n                  name: \"MICE\",\n                  title: \"MICE\"\n                },\n                {\n                  name: \"Corporate\",\n                  title: \"Corporate\"\n                }\n              ]\n            }\n          ],\n          title: \"Quel business segment a réservé au cours des 7 de\"\n        }\n      ]\n    };\n    var surveyRender = !this.state.isCompleted ? (\n      <Survey.Survey\n        json={json}\n        showCompletedPage={false}\n        onComplete={this.onCompleteComponent}\n      />\n    ) : null;\n\n\n    const onCompleteComponent = result => {\n      this.state.isCompleted ? (\n        <div>The component after onComplete event</div>\n    ) : null;\n  }\n\n\n    return (\n      <div>\n        {surveyRender}\n        {onCompleteComponent}\n      </div>\n    );\n  }\n}\n\nexport default SurveyComponent;"]},"metadata":{},"sourceType":"module"}