{"version":3,"sources":["images/GL-Group-Horizontal-BLACK-RVB.png","images/GL-Group-BLACK-RVB.jpg","images/GL-Group-BLACK-RVB.png","serviceWorker.js","aws-exports.js","components/NavBar.js","graphql/queries.js","graphql/mutations.js","survey/FirstServey.js","survey/FinalSurvey.js","components/SurveyComponent.js","pages/HomePage.js","components/FinalStep.js","pages/FinalPage.js","pages/FinalRetry.js","AppWithAuth.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","awsmobile","useStyles","makeStyles","theme","color","backgroundColor","root","flexGrow","menuButton","marginRight","spacing","button","marginLeft","title","textAlign","Navbar","user","handleSignOut","classes","className","AppBar","position","Toolbar","src","Logo","alt","style","height","display","Typography","variant","isMobile","username","Button","onClick","disableElevation","listTrackings","listFirstLogins","createSurvey","createFirstLogin","createClientCountry","firstSurvey","finalSurvey","Survey","applyTheme","SurveyComponent","state","isCompleted","finalResult","onCompleteComponent","result","a","hotelLocation","console","log","props","data","HotelLocation","API","graphql","graphqlOperation","input","userAttributes","email","sub","filter","and","Sub","eq","Week","items","length","IsHotelClosed","HotelReopeningDate","IsHotelContainmentZone","isHotelContainmentZone","HotelContainmentEndDate","NbBookings","NbRoomNightsBooked","NbRoomNightsCanceled","SplitTotalRoomsBusinessSegment","NbRoomNightsBookedFIT","NbRoomNightsBookedMICE","NbRoomNightsBookedCorporate","NbRoomsNightsBS","RemainingRoomNightsBySegment","RoomsNightsSplit","RoomNightsCountry1","NbRoomNightsBookedCountry1","RoomNightsCountry2","NbRoomNightsBookedCountry2","RoomNightsCountry3","NbRoomNightsBookedCountry3","RoomNightsCountry4","NbRoomNightsBookedCountry4","RoomNightsCountry5","NbRoomNightsBookedCountry5","Country","NbRoomNights","SplitByMonth","NbRoomNightsBookedLastWeekApril","NbRoomNightsBookedLastWeekMay","NbRoomNightsBookedLastWeekJune","NbRoomNightsBookedLastWeekJuly","NbRoomNightsBookedLastWeekAugust","NbRoomNightsBookedLastWeekSeptember","TotalNightsBookedLastWeek","M1","M2","M3","M4","M5","M6","M7","TotalNumberRoomAvailable","SplitTotalRoomAvailable","NbOccupiedRoomNightsAvril","NbOccupiedRoomNightsMay","NbOccupiedRoomNightsJune","NbOccupiedRoomNightsJuly","NbOccupiedRoomNightsAugust","NbOccupiedRoomNightsSeptember","NbTotalRoomNightsAvril","NbTotalRoomNightsMay","NbTotalRoomNightsJune","NbTotalRoomNightsJuly","NbTotalRoomNightsAugust","NbTotalRoomNightsSeptember","OccupancyRateApril","OccupancyRateMay","OccupancyRateJune","OccupancyRateJuly","OccupancyRateAugust","OccupancyRateSeptember","Result","resultSurvey","setState","history","push","error","json","this","surveyRender","showCompletedPage","onComplete","Component","HomePage","UserContext","Consumer","Fragment","marginTop","React","alignContent","FinalStep","margin","marginBottom","message","FinalPage","FinalRetry","createContext","createBrowserHistory","AppWithAuth","getUserData","Auth","currentAuthenticatedUser","getUserAttributes","attributes","firstLogins","LocationHotel","authUserData","then","attributesObj","attributesToObject","signOut","onHubCapsule","capsule","payload","event","Hub","listen","Provider","value","exact","path","component","width","Authenticator","signUpConfig","hiddenDefaults","border","padding","fontWeight","Amplify","configure","config","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,2D,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,yICYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCASC,EAhBG,CACd,mBAAsB,YACtB,6BAAgC,iDAChC,mBAAsB,YACtB,kBAAqB,sBACrB,6BAAgC,6BAChC,MAAS,GACT,4BAA+B,iFAC/B,mBAAsB,YACtB,+BAAkC,4BAClC,4BAA+B,iDAC/B,mCAAsC,YACtC,yBAA4B,wC,iJCD1BC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,gBAAkB,WAEtBC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaN,EAAMO,QAAQ,IAE7BC,OAAS,CACPC,WAAa,QAEfC,MAAO,CACLN,SAAU,EACVO,UAAY,QACZL,YAAc,OACdL,MAAQ,aAIC,SAASW,EAAT,GAAwC,IAAtBC,EAAqB,EAArBA,KAAKC,EAAgB,EAAhBA,cAE5BC,EAAUjB,IAEhB,OACI,yBAAKkB,UAAWD,EAAQZ,MACpB,kBAACc,EAAA,EAAD,CAAQC,SAAS,SAASF,UAAWD,EAAQd,OACzC,kBAACkB,EAAA,EAAD,KACA,yBAAKC,IAAKC,IAAMC,IAAI,WAAWC,MAAO,CAACC,OAAO,OAAOC,QAAS,WAC9D,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKX,UAAWD,EAAQL,OACnCkB,WAAmD,GAAvC,yCAAef,EAAKgB,WAGrC,kBAACC,EAAA,EAAD,CAASd,UAAWD,EAAQP,OAAQmB,QAAQ,YAAYI,QAASjB,EAAekB,kBAAgB,GAAhG,e,mECuFPC,EAAa,2SA2BbC,EAAe,0T,iBC9JfC,G,OAAY,wpDA2NZC,EAAgB,8PAuChBC,EAAmB,sRCq7BjBC,EA1rCK,CAChB,MAAS,CACR,CACC,KAAQ,sBACR,SAAY,CACV,CACI,KAAQ,QACR,KAAQ,SACR,SAAY,CACZ,CACA,KAAQ,WACR,KAAQ,gBACR,MAAS,MACT,MAAS,iCACT,YAAc,EACd,cAAiB,OACjB,aAAgB,MAChB,QAAU,CAAC,SACX,QACA,QACA,YACA,SACA,WACA,UACA,YACA,SACA,aACA,OACA,UACA,WACA,SACA,oBACA,SACA,WACA,YACA,WACA,UACA,cACA,UACA,OACA,SACA,eACA,WACA,WACA,YACA,SACA,SACA,cACA,OACA,SACA,eACA,WACA,WACA,QACA,WACA,YACA,oBACA,aACA,WACA,iBACA,SACA,SACA,eACA,QACA,YACA,WACA,aACA,aACA,kBACA,YACA,SACA,UACA,SACA,SACA,WACA,SACA,iBACA,SACA,OACA,QACA,UACA,YACA,YACA,aACA,QACA,QACA,UACA,YACA,YACA,aACA,mBACA,WACA,SACA,OACA,YACA,aACA,WACA,aACA,SACA,UACA,SACA,gBACA,YACA,cACA,wBACA,SACA,gBACA,kBACA,eACA,cACA,YACA,qBACA,YACA,QACA,OACA,uBACA,MACA,UACA,WACA,mBACA,QACA,UACA,eACA,OACA,mBACA,YACA,SACA,QACA,SACA,YACA,UACA,WACA,iBACA,YACA,iBACA,kBACA,aACA,YACA,SACA,SACA,WACA,QACA,UACA,4BACA,eACA,WACA,UACA,UACA,gBACA,UACA,QACA,eACA,OACA,SACA,WACA,eACA,qBACA,WACA,WACA,UACA,YACA,cACA,UACA,QACA,eACA,SACA,UACA,UACA,YACA,aACA,OACA,sBACA,OACA,eACA,SACA,mBACA,YACA,OACA,UACA,aACA,gBACA,UACA,WACA,gBACA,YACA,SACA,WACA,WACA,aACA,6BACA,WACA,aACA,SACA,WACA,cACA,cACA,YACA,UACA,YACA,YACA,QACA,UACA,UACA,QACA,QACA,YACA,gBACA,OACA,SACA,QACA,YACA,uBACA,QACA,QACA,UACA,gBACA,UACA,SACA,SACA,kBACA,YACA,UACA,cACA,WACA,cACA,YACA,WACA,aACA,UACA,QACA,SACA,UACA,YACA,SACA,UACA,UACA,YACA,aACA,WACA,YACA,WACA,cACA,WACA,WACA,qBACA,SACA,UACA,OACA,SACA,YACA,aACA,cACA,UACA,QACA,cACA,iBACA,QACA,YACA,kBACA,WACA,UACA,UACA,SACA,SACA,UACA,QACA,aACA,YACA,WACA,WACA,QACA,SACA,OACA,QACA,UACA,gBACA,mBACA,UACA,aACA,iBACA,SACA,SACA,aACA,cACA,eACA,YACA,mBACA,eACA,SACA,SACA,YACA,WACA,uBACA,mBACA,WACA,cACA,UACA,wBACA,aACA,SACA,cACA,UACA,4BACA,UACA,YACA,mBACA,UACA,WACA,aACA,qBACA,cACA,eACA,WACA,QACA,UACA,WACA,QACA,aACA,UACA,OACA,eACA,eACA,WACA,kBACA,eACA,QACA,aACA,aACA,UACA,SACA,YACA,WACA,UACA,eACA,UACA,eACA,QACA,OACA,QACA,YACA,YACA,aACA,gBACA,YACA,iBACA,QACA,OACA,OACA,QACA,aACA,sBACA,eACA,QACA,gBACA,gBACA,UACA,MACA,aACA,YACA,WACA,QACA,aACA,iBACA,mBACA,kBACA,QACA,SACA,OACA,UACA,SACA,UACA,SACA,SACA,QACA,iBACA,WACA,QACA,YACA,SACA,QACA,YACA,iBACA,UACA,YACA,eACA,mBAGA,MAAS,kBAEd,CACC,KAAQ,QACR,KAAQ,gBACR,SAAY,CACX,CACC,KAAQ,UACR,KAAQ,gBACR,MAAS,yBACT,YAAc,EACd,UAAa,MACb,WAAc,MAEf,CACC,KAAQ,OACR,KAAQ,qBACR,UAAa,yBACb,MAAS,KACT,MAAS,oCACT,YAAc,EACd,UAAa,OACb,IAAO,eAGT,MAAS,iBAEV,CACC,KAAQ,QACR,KAAQ,oBACR,SAAY,CACX,CACC,KAAQ,UACR,KAAQ,yBACR,MAAS,gDACT,YAAc,EACd,UAAa,MACb,WAAc,MAEf,CACC,KAAQ,OACR,KAAQ,0BACR,UAAa,kCACb,MAAS,KACT,MAAS,6DACT,YAAc,EACd,UAAa,OACb,IAAO,eAGT,MAAS,sBAGX,MAAS,kCAEV,CACC,KAAQ,qBACR,SAAY,CACX,CACC,KAAQ,QACR,KAAQ,mBACR,SAAY,CACX,CACC,KAAQ,OACR,KAAQ,aACR,MAAS,KACT,MAAS,2BACT,YAAc,EACd,WAAc,CACb,CACC,KAAQ,UACR,KAAQ,iCACR,SAAY,IAGd,cAAiB,OACjB,UAAa,SACb,KAAQ,IAET,CACC,KAAQ,OACR,KAAQ,qBACR,MAAS,KACT,MAAS,qCACT,YAAc,EACd,kBAAqB,iCACrB,WAAc,CACb,CACC,KAAQ,UACR,KAAQ,iCACR,SAAY,IAGd,cAAiB,OACjB,UAAa,SACb,KAAQ,IAET,CACC,KAAQ,OACR,KAAQ,uBACR,MAAS,KACT,MAAS,wCACT,YAAc,EACd,kBAAqB,iCACrB,WAAc,CACb,CACC,KAAQ,UACR,KAAQ,iCACR,SAAY,IAGd,cAAiB,OACjB,UAAa,SACb,KAAQ,KAGV,MAAS,4CAEV,CACC,KAAQ,QACR,KAAQ,SACR,SAAY,CACX,CACC,KAAQ,iBACR,KAAQ,mBACR,MAAS,MACT,MAAS,wHACT,WAAc,CACb,CACC,KAAQ,aACR,KAAQ,wCACR,WAAc,0OAEf,CACC,KAAQ,aACR,KAAQ,sJACR,WAAc,ssBAGhB,QAAW,CACV,CACC,KAAQ,UACR,MAAS,UACT,SAAY,WACZ,MAAS,KACT,WAAc,8BACd,aAAgB,MAChB,QAAU,CACN,mBACA,UACA,uBACA,cACA,sBACA,WACA,UACA,UACA,uBACA,SACA,aACA,YACA,iBACA,UACA,YACA,QACA,gBACA,aACA,yBACA,WACA,aACA,UACA,eACA,WACA,UACA,UACA,QACA,mBACA,UACA,SACA,UACA,wBACA,SACA,UACA,SACA,gBACA,WACA,UACA,SACA,SACA,0BACA,mBACA,2BACA,sBACA,cACA,cACA,eACA,QACA,WACA,QACA,WACA,oBACA,aACA,OACA,aACA,aACA,mBACA,SACA,iBACA,UACA,eACA,WACA,UACA,WACA,qBACA,UACA,oBACA,UACA,UACA,QACA,iBACA,UACA,QACA,WACA,UACA,OACA,mBACA,aACA,gBACA,SACA,QACA,iBACA,UACA,UACA,gBACA,WACA,QACA,YACA,YACA,SACA,SACA,aACA,oBACA,SACA,+CACA,YACA,OACA,gBACA,SACA,YACA,oCACA,WACA,UACA,QACA,UACA,iBACA,YACA,UACA,SACA,cACA,QACA,iCACA,OACA,OACA,UACA,QACA,SACA,UACA,SACA,QACA,QACA,aACA,WACA,WACA,UACA,wBACA,cACA,cACA,SACA,iBACA,aACA,OACA,UACA,cACA,gBACA,YACA,UACA,UACA,YACA,aACA,SACA,QACA,UACA,SACA,UACA,aACA,eACA,aACA,mBACA,YACA,OACA,kBACA,WACA,QACA,2BACA,aACA,aACA,aACA,QACA,YACA,WACA,SACA,SACA,WACA,aACA,UACA,gBACA,QACA,iBACA,UACA,YACA,cACA,SACA,QACA,QACA,OACA,cACA,OACA,SACA,OACA,mBACA,mBACA,cACA,WACA,SACA,4BACA,mBACA,cACA,0BACA,WACA,QACA,WACA,QACA,UACA,UACA,SACA,SACA,SACA,eACA,kBACA,aACA,QACA,SACA,YACA,eACA,WACA,yBACA,WACA,eACA,aACA,UACA,UACA,WACA,cACA,qDACA,cACA,eACA,QACA,YACA,mBACA,2BACA,OACA,8BACA,OACA,WACA,aACA,UACA,cACA,eACA,UACA,QACA,SACA,sBACA,SACA,SACA,WACA,UACA,SACA,8BACA,gBACA,UACA,aACA,eACA,4BACA,YACA,yBACA,sBACA,UACA,UACA,oBACA,QACA,SACA,QACA,UACA,eACA,SACA,aAGL,CACC,KAAQ,eACR,MAAS,oBACT,SAAY,OACZ,MAAS,KACT,WAAc,yBACd,WAAc,CACb,CACC,KAAQ,UACR,KAAQ,iCACR,SAAY,IAGd,gBAAmB,oOACnB,kBAAqB,UACrB,UAAa,WAGf,KAAQ,CACP,CACC,MAAS,WACT,KAAQ,kCAET,CACC,MAAS,WACT,KAAQ,yBAET,CACC,MAAS,WACT,KAAQ,wBAET,CACC,MAAS,WACT,KAAQ,wBAET,CACC,MAAS,WACT,KAAQ,yBAGV,UAAa,qBAIhB,CACC,KAAQ,iBACR,KAAQ,iCACR,MAAS,MACT,MAAS,wDACT,WAAc,CACb,CACC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Q,QACR,KAAQ,SACR,SAAY,CACX,CACC,KAAQ,iBACR,KAAQ,mBACR,MAAS,MACT,MAAS,wHACT,WAAc,CACb,CACC,KAAQ,aACR,KAAQ,wCACR,WAAc,0OAEf,CACC,KAAQ,aACR,KAAQ,sJACR,WAAc,ssBAGhB,QAAW,CACV,CACC,KAAQ,UACR,MAAS,UACT,SAAY,WACZ,MAAS,KACT,WAAc,8BACd,aAAgB,MAChB,QAAU,CACN,mBACA,UACA,uBACA,cACA,sBACA,WACA,UACA,UACA,uBACA,SACA,aACA,YACA,iBACA,UACA,YACA,QACA,gBACA,aACA,yBACA,WACA,aACA,UACA,eACA,WACA,UACA,UACA,QACA,mBACA,UACA,SACA,UACA,wBACA,SACA,UACA,SACA,gBACA,WACA,UACA,SACA,SACA,0BACA,mBACA,2BACA,sBACA,cACA,cACA,eACA,QACA,WACA,QACA,WACA,oBACA,aACA,OACA,aACA,aACA,mBACA,SACA,iBACA,UACA,eACA,WACA,UACA,WACA,qBACA,UACA,oBACA,UACA,UACA,QACA,iBACA,UACA,QACA,WACA,UACA,OACA,mBACA,aACA,gBACA,SACA,QACA,iBACA,UACA,UACA,gBACA,WACA,QACA,YACA,YACA,SACA,SACA,aACA,oBACA,SACA,+CACA,YACA,OACA,gBACA,SACA,YACA,oCACA,WACA,UACA,QACA,UACA,iBACA,YACA,UACA,SACA,cACA,QACA,iCACA,OACA,OACA,UACA,QACA,SACA,UACA,SACA,QACA,QACA,aACA,WACA,WACA,UACA,wBACA,cACA,cACA,SACA,iBACA,aACA,OACA,UACA,cACA,gBACA,YACA,UACA,UACA,YACA,aACA,SACA,QACA,UACA,SACA,UACA,aACA,eACA,aACA,mBACA,YACA,OACA,kBACA,WACA,QACA,2BACA,aACA,aACA,aACA,QACA,YACA,WACA,SACA,SACA,WACA,aACA,UACA,gBACA,QACA,iBACA,UACA,YACA,cACA,SACA,QACA,QACA,OACA,cACA,OACA,SACA,OACA,mBACA,mBACA,cACA,WACA,SACA,4BACA,mBACA,cACA,0BACA,WACA,QACA,WACA,QACA,UACA,UACA,SACA,SACA,SACA,eACA,kBACA,aACA,QACA,SACA,YACA,eACA,WACA,yBACA,WACA,eACA,aACA,UACA,UACA,WACA,cACA,qDACA,cACA,eACA,QACA,YACA,mBACA,2BACA,OACA,8BACA,OACA,WACA,aACA,UACA,cACA,eACA,UACA,QACA,SACA,sBACA,SACA,SACA,WACA,UACA,SACA,8BACA,gBACA,UACA,aACA,eACA,4BACA,YACA,yBACA,sBACA,UACA,UACA,oBACA,QACA,SACA,QACA,UACA,eACA,SACA,aAGL,CACC,KAAQ,eACR,MAAS,oBACT,SAAY,OACZ,MAAS,KACT,WAAc,yBACd,WAAc,CACb,CACC,KAAQ,UACR,KAAQ,iCACR,SAAY,IAGd,gBAAmB,oOACnB,kBAAqB,UACrB,UAAa,WAGf,KAAQ,CACP,CACC,MAAS,WACT,KAAQ,kCAET,CACC,MAAS,WACT,KAAQ,yBAET,CACC,MAAS,WACT,KAAQ,wBAET,CACC,MAAS,WACT,KAAQ,wBAET,CACC,MAAS,WACT,KAAQ,yBAGV,UAAa,qBAIhB,CACC,KAAQ,iBACR,KAAQ,iCACR,MAAS,MACT,MAAS,wDACT,WAAc,CACb,CACC,KAAQ,aACR,KAAQ,oEACR,WAAc,mMAGhB,QAAW,CACV,CACC,KAAQ,kBACR,MAAS,qBACT,SAAY,OACZ,MAAS,KACT,WAAc,CACb,CACC,KAAQ,UACR,KAAQ,iCACR,SAAY,IAGd,gBAAmB,6LACnB,UAAa,WAGf,QAAW,CACV,EACA,EACA,EACA,EACA,GAED,SAAY,OACZ,KAAQ,CACP,CACC,MAAS,MACT,KAAQ,OAET,CACC,MAAS,OACT,KAAQ,QAET,CACC,MAAS,YACT,KAAQ,cAGV,UAAa,+DAEd,CACC,KAAQ,QACR,KAAQ,SACR,SAAY,CACX,CACC,KAAQ,iBACR,KAAQ,eACR,MAAS,kDACT,WAAc,CACb,CACC,KAAQ,aACR,KAAQ,uDACR,WAAc,0CAGhB,QAAW,CACV,CACC,KAAQ,KACR,MAAS,qBAC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","file":"static/js/main.953d3056.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GL-Group-Horizontal-BLACK-RVB.c4bccaed.png\";","module.exports = __webpack_public_path__ + \"static/media/GL-Group-BLACK-RVB.c3f9032f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/GL-Group-BLACK-RVB.e716c161.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"eu-west-1\",\n    \"aws_cognito_identity_pool_id\": \"eu-west-1:b761f909-d833-4935-8cc9-b3c9765e1fdd\",\n    \"aws_cognito_region\": \"eu-west-1\",\n    \"aws_user_pools_id\": \"eu-west-1_58gn5sxdL\",\n    \"aws_user_pools_web_client_id\": \"2iscb4neslq5q419r3l1bga867\",\n    \"oauth\": {},\n    \"aws_appsync_graphqlEndpoint\": \"https://475h7g54ijdgzcegdrs52uzx4a.appsync-api.eu-west-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"eu-west-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    \"aws_content_delivery_bucket\": \"glh-survey-20200408141245-hostingbucket-survey\",\n    \"aws_content_delivery_bucket_region\": \"eu-west-1\",\n    \"aws_content_delivery_url\": \"https://d6ii009ekeqbx.cloudfront.net\"\n};\n\n\nexport default awsmobile;\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Logo from '../images/GL-Group-Horizontal-BLACK-RVB.png';\nimport {\n  isMobile\n} from \"react-device-detect\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    color :{\n        backgroundColor : '#f57c00',\n    },\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    button : {\n      marginLeft : 'auto'\n    },\n    title: {\n      flexGrow: 1,\n      textAlign : 'right',\n      marginRight : '20px',\n      color : 'black'\n    },\n  }));\n\nexport default function Navbar ({user,handleSignOut}) {\n     \n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.color} >\n                <Toolbar >\n                <img src={Logo} alt=\"GLH Logo\" style={{height:'80px',display: 'block'}}></img>\n                <Typography variant=\"h7\" className={classes.title}>\n                      {(!isMobile)? (<span> Hello, {user.username}</span> ):\"\"}\n                </Typography>\n                    \n                    <Button  className={classes.button} variant=\"contained\" onClick={handleSignOut} disableElevation>Sign Out</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n   )\n};\n\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getSurvey = /* GraphQL */ `\n  query GetSurvey($id: ID!) {\n    getSurvey(id: $id) {\n      id\n      IsHotelClosed\n      HotelReopeningDate\n      IsHotelContainmentZone\n      HotelContainmentEndDate\n      NbBookings\n      NbRoomNightsCanceled\n      NbRoomNightsBooked\n      HotelLocation\n      NbRoomNightsBookedFIT\n      NbRoomNightsBookedMICE\n      NbRoomNightsBookedCorporate\n      RemainingRoomNightsBySegment\n      RoomNightsCountry1\n      NbRoomNightsBookedCountry1\n      RoomNightsCountry2\n      NbRoomNightsBookedCountry2\n      RoomNightsCountry3\n      NbRoomNightsBookedCountry3\n      RoomNightsCountry4\n      NbRoomNightsBookedCountry4\n      RoomNightsCountry5\n      NbRoomNightsBookedCountry5\n      NbRoomNightsBookedLastWeekApril\n      NbRoomNightsBookedLastWeekMay\n      NbRoomNightsBookedLastWeekJune\n      NbRoomNightsBookedLastWeekJuly\n      NbRoomNightsBookedLastWeekAugust\n      NbRoomNightsBookedLastWeekSeptember\n      TotalNightsBookedLastWeek\n      TotalNumberRoomAvailable\n      NbOccupiedRoomNightsAvril\n      NbOccupiedRoomNightsMay\n      NbOccupiedRoomNightsJune\n      NbOccupiedRoomNightsJuly\n      NbOccupiedRoomNightsAugust\n      NbOccupiedRoomNightsSeptember\n      NbTotalRoomNightsAvril\n      NbTotalRoomNightsMay\n      NbTotalRoomNightsJune\n      NbTotalRoomNightsJuly\n      NbTotalRoomNightsAugust\n      NbTotalRoomNightsSeptember\n      OccupancyRateApril\n      OccupancyRateMay\n      OccupancyRateJune\n      OccupancyRateJuly\n      OccupancyRateAugust\n      OccupancyRateSeptember\n      Result\n      Week\n    }\n  }\n`;\nexport const listSurveys = /* GraphQL */ `\n  query ListSurveys(\n    $filter: ModelSurveyFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listSurveys(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        IsHotelClosed\n        HotelReopeningDate\n        IsHotelContainmentZone\n        HotelContainmentEndDate\n        NbBookings\n        NbRoomNightsCanceled\n        NbRoomNightsBooked\n        HotelLocation\n        NbRoomNightsBookedFIT\n        NbRoomNightsBookedMICE\n        NbRoomNightsBookedCorporate\n        RemainingRoomNightsBySegment\n        RoomNightsCountry1\n        NbRoomNightsBookedCountry1\n        RoomNightsCountry2\n        NbRoomNightsBookedCountry2\n        RoomNightsCountry3\n        NbRoomNightsBookedCountry3\n        RoomNightsCountry4\n        NbRoomNightsBookedCountry4\n        RoomNightsCountry5\n        NbRoomNightsBookedCountry5\n        NbRoomNightsBookedLastWeekApril\n        NbRoomNightsBookedLastWeekMay\n        NbRoomNightsBookedLastWeekJune\n        NbRoomNightsBookedLastWeekJuly\n        NbRoomNightsBookedLastWeekAugust\n        NbRoomNightsBookedLastWeekSeptember\n        TotalNightsBookedLastWeek\n        TotalNumberRoomAvailable\n        NbOccupiedRoomNightsAvril\n        NbOccupiedRoomNightsMay\n        NbOccupiedRoomNightsJune\n        NbOccupiedRoomNightsJuly\n        NbOccupiedRoomNightsAugust\n        NbOccupiedRoomNightsSeptember\n        NbTotalRoomNightsAvril\n        NbTotalRoomNightsMay\n        NbTotalRoomNightsJune\n        NbTotalRoomNightsJuly\n        NbTotalRoomNightsAugust\n        NbTotalRoomNightsSeptember\n        OccupancyRateApril\n        OccupancyRateMay\n        OccupancyRateJune\n        OccupancyRateJuly\n        OccupancyRateAugust\n        OccupancyRateSeptember\n        Result\n        Week\n      }\n      nextToken\n    }\n  }\n`;\nexport const getTracking = /* GraphQL */ `\n  query GetTracking($id: ID!) {\n    getTracking(id: $id) {\n      id\n      Email\n      Sub\n      Week\n    }\n  }\n`;\nexport const listTrackings = /* GraphQL */ `\n  query ListTrackings(\n    $filter: ModelTrackingFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listTrackings(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        Email\n        Sub\n        Week\n      }\n      nextToken\n    }\n  }\n`;\nexport const getFirstLogin = /* GraphQL */ `\n  query GetFirstLogin($id: ID!) {\n    getFirstLogin(id: $id) {\n      id\n      Email\n      Sub\n      LocationHotel\n    }\n  }\n`;\nexport const listFirstLogins = /* GraphQL */ `\n  query ListFirstLogins(\n    $filter: ModelFirstLoginFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listFirstLogins(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        Email\n        Sub\n        LocationHotel\n      }\n      nextToken\n    }\n  }\n`;\nexport const getClientCountry = /* GraphQL */ `\n  query GetClientCountry($id: ID!) {\n    getClientCountry(id: $id) {\n      id\n      Country\n      NumberOfClientBookings\n      Week\n    }\n  }\n`;\nexport const listClientCountrys = /* GraphQL */ `\n  query ListClientCountrys(\n    $filter: ModelClientCountryFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listClientCountrys(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        Country\n        NumberOfClientBookings\n        Week\n      }\n      nextToken\n    }\n  }\n`;\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createSurvey = /* GraphQL */ `\n  mutation CreateSurvey(\n    $input: CreateSurveyInput!\n    $condition: ModelSurveyConditionInput\n  ) {\n    createSurvey(input: $input, condition: $condition) {\n      id\n      IsHotelClosed\n      HotelReopeningDate\n      IsHotelContainmentZone\n      HotelContainmentEndDate\n      NbBookings\n      NbRoomNightsCanceled\n      NbRoomNightsBooked\n      HotelLocation\n      NbRoomNightsBookedFIT\n      NbRoomNightsBookedMICE\n      NbRoomNightsBookedCorporate\n      RemainingRoomNightsBySegment\n      RoomNightsCountry1\n      NbRoomNightsBookedCountry1\n      RoomNightsCountry2\n      NbRoomNightsBookedCountry2\n      RoomNightsCountry3\n      NbRoomNightsBookedCountry3\n      RoomNightsCountry4\n      NbRoomNightsBookedCountry4\n      RoomNightsCountry5\n      NbRoomNightsBookedCountry5\n      NbRoomNightsBookedLastWeekApril\n      NbRoomNightsBookedLastWeekMay\n      NbRoomNightsBookedLastWeekJune\n      NbRoomNightsBookedLastWeekJuly\n      NbRoomNightsBookedLastWeekAugust\n      NbRoomNightsBookedLastWeekSeptember\n      TotalNightsBookedLastWeek\n      TotalNumberRoomAvailable\n      NbOccupiedRoomNightsAvril\n      NbOccupiedRoomNightsMay\n      NbOccupiedRoomNightsJune\n      NbOccupiedRoomNightsJuly\n      NbOccupiedRoomNightsAugust\n      NbOccupiedRoomNightsSeptember\n      NbTotalRoomNightsAvril\n      NbTotalRoomNightsMay\n      NbTotalRoomNightsJune\n      NbTotalRoomNightsJuly\n      NbTotalRoomNightsAugust\n      NbTotalRoomNightsSeptember\n      OccupancyRateApril\n      OccupancyRateMay\n      OccupancyRateJune\n      OccupancyRateJuly\n      OccupancyRateAugust\n      OccupancyRateSeptember\n      Result\n      Week\n    }\n  }\n`;\nexport const updateSurvey = /* GraphQL */ `\n  mutation UpdateSurvey(\n    $input: UpdateSurveyInput!\n    $condition: ModelSurveyConditionInput\n  ) {\n    updateSurvey(input: $input, condition: $condition) {\n      id\n      IsHotelClosed\n      HotelReopeningDate\n      IsHotelContainmentZone\n      HotelContainmentEndDate\n      NbBookings\n      NbRoomNightsCanceled\n      NbRoomNightsBooked\n      HotelLocation\n      NbRoomNightsBookedFIT\n      NbRoomNightsBookedMICE\n      NbRoomNightsBookedCorporate\n      RemainingRoomNightsBySegment\n      RoomNightsCountry1\n      NbRoomNightsBookedCountry1\n      RoomNightsCountry2\n      NbRoomNightsBookedCountry2\n      RoomNightsCountry3\n      NbRoomNightsBookedCountry3\n      RoomNightsCountry4\n      NbRoomNightsBookedCountry4\n      RoomNightsCountry5\n      NbRoomNightsBookedCountry5\n      NbRoomNightsBookedLastWeekApril\n      NbRoomNightsBookedLastWeekMay\n      NbRoomNightsBookedLastWeekJune\n      NbRoomNightsBookedLastWeekJuly\n      NbRoomNightsBookedLastWeekAugust\n      NbRoomNightsBookedLastWeekSeptember\n      TotalNightsBookedLastWeek\n      TotalNumberRoomAvailable\n      NbOccupiedRoomNightsAvril\n      NbOccupiedRoomNightsMay\n      NbOccupiedRoomNightsJune\n      NbOccupiedRoomNightsJuly\n      NbOccupiedRoomNightsAugust\n      NbOccupiedRoomNightsSeptember\n      NbTotalRoomNightsAvril\n      NbTotalRoomNightsMay\n      NbTotalRoomNightsJune\n      NbTotalRoomNightsJuly\n      NbTotalRoomNightsAugust\n      NbTotalRoomNightsSeptember\n      OccupancyRateApril\n      OccupancyRateMay\n      OccupancyRateJune\n      OccupancyRateJuly\n      OccupancyRateAugust\n      OccupancyRateSeptember\n      Result\n      Week\n    }\n  }\n`;\nexport const deleteSurvey = /* GraphQL */ `\n  mutation DeleteSurvey(\n    $input: DeleteSurveyInput!\n    $condition: ModelSurveyConditionInput\n  ) {\n    deleteSurvey(input: $input, condition: $condition) {\n      id\n      IsHotelClosed\n      HotelReopeningDate\n      IsHotelContainmentZone\n      HotelContainmentEndDate\n      NbBookings\n      NbRoomNightsCanceled\n      NbRoomNightsBooked\n      HotelLocation\n      NbRoomNightsBookedFIT\n      NbRoomNightsBookedMICE\n      NbRoomNightsBookedCorporate\n      RemainingRoomNightsBySegment\n      RoomNightsCountry1\n      NbRoomNightsBookedCountry1\n      RoomNightsCountry2\n      NbRoomNightsBookedCountry2\n      RoomNightsCountry3\n      NbRoomNightsBookedCountry3\n      RoomNightsCountry4\n      NbRoomNightsBookedCountry4\n      RoomNightsCountry5\n      NbRoomNightsBookedCountry5\n      NbRoomNightsBookedLastWeekApril\n      NbRoomNightsBookedLastWeekMay\n      NbRoomNightsBookedLastWeekJune\n      NbRoomNightsBookedLastWeekJuly\n      NbRoomNightsBookedLastWeekAugust\n      NbRoomNightsBookedLastWeekSeptember\n      TotalNightsBookedLastWeek\n      TotalNumberRoomAvailable\n      NbOccupiedRoomNightsAvril\n      NbOccupiedRoomNightsMay\n      NbOccupiedRoomNightsJune\n      NbOccupiedRoomNightsJuly\n      NbOccupiedRoomNightsAugust\n      NbOccupiedRoomNightsSeptember\n      NbTotalRoomNightsAvril\n      NbTotalRoomNightsMay\n      NbTotalRoomNightsJune\n      NbTotalRoomNightsJuly\n      NbTotalRoomNightsAugust\n      NbTotalRoomNightsSeptember\n      OccupancyRateApril\n      OccupancyRateMay\n      OccupancyRateJune\n      OccupancyRateJuly\n      OccupancyRateAugust\n      OccupancyRateSeptember\n      Result\n      Week\n    }\n  }\n`;\nexport const createTracking = /* GraphQL */ `\n  mutation CreateTracking(\n    $input: CreateTrackingInput!\n    $condition: ModelTrackingConditionInput\n  ) {\n    createTracking(input: $input, condition: $condition) {\n      id\n      Email\n      Sub\n      Week\n    }\n  }\n`;\nexport const updateTracking = /* GraphQL */ `\n  mutation UpdateTracking(\n    $input: UpdateTrackingInput!\n    $condition: ModelTrackingConditionInput\n  ) {\n    updateTracking(input: $input, condition: $condition) {\n      id\n      Email\n      Sub\n      Week\n    }\n  }\n`;\nexport const deleteTracking = /* GraphQL */ `\n  mutation DeleteTracking(\n    $input: DeleteTrackingInput!\n    $condition: ModelTrackingConditionInput\n  ) {\n    deleteTracking(input: $input, condition: $condition) {\n      id\n      Email\n      Sub\n      Week\n    }\n  }\n`;\nexport const createFirstLogin = /* GraphQL */ `\n  mutation CreateFirstLogin(\n    $input: CreateFirstLoginInput!\n    $condition: ModelFirstLoginConditionInput\n  ) {\n    createFirstLogin(input: $input, condition: $condition) {\n      id\n      Email\n      Sub\n      LocationHotel\n    }\n  }\n`;\nexport const updateFirstLogin = /* GraphQL */ `\n  mutation UpdateFirstLogin(\n    $input: UpdateFirstLoginInput!\n    $condition: ModelFirstLoginConditionInput\n  ) {\n    updateFirstLogin(input: $input, condition: $condition) {\n      id\n      Email\n      Sub\n      LocationHotel\n    }\n  }\n`;\nexport const deleteFirstLogin = /* GraphQL */ `\n  mutation DeleteFirstLogin(\n    $input: DeleteFirstLoginInput!\n    $condition: ModelFirstLoginConditionInput\n  ) {\n    deleteFirstLogin(input: $input, condition: $condition) {\n      id\n      Email\n      Sub\n      LocationHotel\n    }\n  }\n`;\nexport const createClientCountry = /* GraphQL */ `\n  mutation CreateClientCountry(\n    $input: CreateClientCountryInput!\n    $condition: ModelClientCountryConditionInput\n  ) {\n    createClientCountry(input: $input, condition: $condition) {\n      id\n      Country\n      NumberOfClientBookings\n      Week\n    }\n  }\n`;\nexport const updateClientCountry = /* GraphQL */ `\n  mutation UpdateClientCountry(\n    $input: UpdateClientCountryInput!\n    $condition: ModelClientCountryConditionInput\n  ) {\n    updateClientCountry(input: $input, condition: $condition) {\n      id\n      Country\n      NumberOfClientBookings\n      Week\n    }\n  }\n`;\nexport const deleteClientCountry = /* GraphQL */ `\n  mutation DeleteClientCountry(\n    $input: DeleteClientCountryInput!\n    $condition: ModelClientCountryConditionInput\n  ) {\n    deleteClientCountry(input: $input, condition: $condition) {\n      id\n      Country\n      NumberOfClientBookings\n      Week\n    }\n  }\n`;\n","const firstSurvey = {\n    \"pages\": [\n     {\n      \"name\": \"GENERAL INFORMATION\",\n      \"elements\": [\n        {\n            \"type\": \"panel\",\n            \"name\": \"panel2\",\n            \"elements\": [\n            {\n            \"type\": \"dropdown\",\n            \"name\": \"HotelLocation\",\n            \"width\": \"200\",\n            \"title\": \"Where is your hotel located ? \",\n            \"isRequired\": true,\n            \"titleLocation\": \"left\",\n            \"choicesOrder\": \"asc\",\n            \"choices\":['London',\n            'Tokyo',\n            'Milan',\n            'Cape Town',\n            'Velden',\n            'Florence',\n            'Bangkok',\n            'Hong Kong',\n            'Hoi An',\n            'Chiang Mai',\n            'Ubud',\n            'Nayarit',\n            'Lausanne',\n            'Vienna',\n            'Palma de Mallorca',\n            'Athens',\n            'Nusa Dua',\n            'Marrakech',\n            'Magelang',\n            'Manggis',\n            'Baden Baden',\n            'Chicago',\n            'Rome',\n            'Dublin',\n            'Jackson Hole',\n            'Langkawi',\n            'Budapest',\n            'Singapore',\n            'Zurich',\n            'Geneva',\n            'Mexico City',\n            'Doha',\n            'Phuket',\n            'Ranthambhore',\n            'Ajabgarh',\n            'Montreux',\n            'Paris',\n            'Istanbul',\n            'Bora Bora',\n            'San Jose del Cabo',\n            'Chiang Rai',\n            'Whistler',\n            'Rio de Janeiro',\n            'Berlin',\n            'Madrid',\n            'Buenos Aires',\n            'Cairo',\n            'Las Vegas',\n            'New York',\n            'Guanacaste',\n            'Tourrettes',\n            'Sharm El Sheikh',\n            'New Delhi',\n            'Prague',\n            'Ravello',\n            'Venice',\n            'Munich',\n            'Marbella',\n            'Lisbon',\n            'Poste de Flacq',\n            'Sintra',\n            'Loja',\n            'Reims',\n            'Funchal',\n            'Amsterdam',\n            'Portofino',\n            'New Milton',\n            'Dubai',\n            'Miami',\n            'Bahrain',\n            'Edinburgh',\n            'Frankfurt',\n            'Beau Champ',\n            'Playa del Carmen',\n            'Biarritz',\n            'Gstaad',\n            'Deia',\n            'Bariloche',\n            'Alexandria',\n            'Shanghai',\n            'Grand Baie',\n            'Dallas',\n            'Udaipur',\n            'Jaipur',\n            'Santa Barbara',\n            'Barcelona',\n            'Monte-Carlo',\n            'Cernobbio (Lake Como)',\n            'Mumbai',\n            'St Petersburg',\n            'Washington D.C.',\n            'Great Milton',\n            'Los Angeles',\n            'Bangalore',\n            'St Jean Cap Ferrat',\n            'Vancouver',\n            'Kutas',\n            'Bath',\n            'Savelletri di Fasano',\n            'Eze',\n            'Mougins',\n            'Positano',\n            'Castelnau le Lez',\n            'Basel',\n            'Casares',\n            'Ile de Ré',\n            'Lyon',\n            'Mane en Provence',\n            'Mirambeau',\n            'Lamego',\n            'Arosa',\n            'Ascona',\n            'Essaouira',\n            'Doonbeg',\n            'Evershot',\n            'Umhlanga Rocks',\n            'Sao Paulo',\n            'Punta del Este',\n            'Aix en Provence',\n            'Ramatuelle',\n            'Chantilly',\n            'Cannes',\n            'Yangon',\n            'Brussels',\n            'Ascot',\n            'Erbusco',\n            'Castiglione Della Pescaia',\n            'Porto Ercole',\n            'Seminyak',\n            'Tabanan',\n            'Uluwatu',\n            'Carmel Valley',\n            'Saulieu',\n            'Cusco',\n            'Machu Picchu',\n            'Lima',\n            'Yanque',\n            'Salzburg',\n            'Dogmersfield',\n            'Kitzb√ºhel',\n            'Bidarray',\n            'Koh Kood',\n            'Hua Hin',\n            'Koh Samui',\n            'Koh Yao Noi',\n            'Con Dao',\n            'Lenox',\n            'Fort William',\n            'Skoura',\n            'Porches',\n            'Valence',\n            'Talloires',\n            'Luxembourg',\n            'Cong',\n            'Newmarket-on-Fergus',\n            'Paro',\n            'Philadelphia',\n            'Megeve',\n            'Hof bei Salzburg',\n            'Nha Trang',\n            'Riga',\n            'Tallinn',\n            'Alta Badia',\n            'San Francisco',\n            'Beijing',\n            'Jimbaran',\n            'Luang Prabang',\n            'Siem Reap',\n            'Sydney',\n            'Straffan',\n            'Salvador',\n            'Phnom Penh',\n            'Eug√©nie-les-Bains',\n            'Hangzhou',\n            'Courchevel',\n            'Verona',\n            'Taormina',\n            'Firostefani',\n            'Port Soller',\n            'Neuchatel',\n            'Hamburg',\n            'Abu Dhabi',\n            'Stockholm',\n            'Vence',\n            'Chennai',\n            'Jodhpur',\n            'Coorg',\n            'Bekal',\n            'Hyderabad',\n            'Foz do Iguacu',\n            'Bern',\n            'Muscat',\n            'Krabi',\n            'Andermatt',\n            'Tremezzo (Lake Como)',\n            'Evora',\n            'Osaka',\n            'Seville',\n            'San Sebastian',\n            'Atlanta',\n            'Austin',\n            'Boston',\n            'Fort Lauderdale',\n            'Guangzhou',\n            'Hoboken',\n            'Minneapolis',\n            'Montreal',\n            'New Orleans',\n            'San Diego',\n            'Santiago',\n            'Scottsdale',\n            'Seattle',\n            'Seoul',\n            'Taipei',\n            'Verbier',\n            'Baltimore',\n            'Denver',\n            'Houston',\n            'Jakarta',\n            'The Hague',\n            'Santa Rosa',\n            'Helsinki',\n            'Albufeira',\n            'Portland',\n            'Porto Cervo',\n            'Belgrade',\n            'Tixkokob',\n            'Manchester Village',\n            'Moscow',\n            'Paracas',\n            'Agra',\n            'Warsaw',\n            'Charlotte',\n            'Megalohori',\n            'Temozon Sur',\n            'Uayamon',\n            'Sanya',\n            'Addis Ababa',\n            'Costa Navarino',\n            'Sofia',\n            'Turnberry',\n            'Kowe√Øt',\n            'Santa Fe',\n            'Tianjin',\n            'Kolkata',\n            'Ankara',\n            'Weimar',\n            'Leipzig',\n            'Ajman',\n            'Porto Rico',\n            'Park City',\n            'Le Morne',\n            'Shenzhen',\n            'Lhasa',\n            'Makati',\n            'Xian',\n            'Hanoi',\n            'Sciacca',\n            'Teton Village',\n            'Westlake Village',\n            'Orlando',\n            'Palm Beach',\n            'Silicon Valley',\n            'Gordes',\n            'Makkah',\n            'Porto Heli',\n            'Moyo Island',\n            'Sveti Stefan',\n            'Pamalican',\n            'Turks and Caicos',\n            'Canyon Point',\n            'Bodrum',\n            'Dorado',\n            'St Tropez',\n            'Honfleur',\n            'Castiglion del Bosco',\n            'St Paul de Vence',\n            'Anacapri',\n            'Clanwilliam',\n            'Toronto',\n            'San Miguel de Allende',\n            'San Martin',\n            'Jeddah',\n            'St Jean Bay',\n            'Antibes',\n            'H√¥-Chi-Minh-City',\n            'Phoenix',\n            'Jerusalem',\n            'Trou d eau Douce',\n            'Elciego',\n            'Canyamel',\n            'Palazzetto',\n            'Al Jabal Al Akhdar',\n            'Livingstone',\n            'Playa Grande',\n            'Tangalla',\n            'Galla',\n            'Lijiang',\n            'Limerick',\n            'Shima',\n            'Menlo Park',\n            'Big Sur',\n            'Vail',\n            'Auchterarder',\n            'Santa Monica',\n            'Bluffton',\n            'Evian-les-Bains',\n            'Palo Laziale',\n            'Porto',\n            'Copenhagen',\n            'Champillon',\n            'Lucerne',\n            'Cognac',\n            'Massignac',\n            'Tel Aviv',\n            'Vitznau',\n            'Saint-Moritz',\n            'Chengdu',\n            'Kuala Lumpur',\n            'Vevey',\n            'Cluj',\n            'Aspen',\n            'Martillac',\n            'St Helena',\n            'Punta Cana',\n            'Half Moon Bay',\n            'Calistoga',\n            'The Big Island',\n            'Lanai',\n            'Oahu',\n            'Maui',\n            'Kauai',\n            'Liwa Oasis',\n            'Sir Bani Yas Island',\n            'Dubai Desert',\n            'Ornos',\n            'Platis Gialos',\n            'Agios Ioannis',\n            'Elounda',\n            'Oia',\n            'Imerovigli',\n            'Perivolos',\n            'Holetown',\n            'Ripon',\n            'Maidenhead',\n            'East Grinstead',\n            'Desroches Island',\n            'Puerto Vallarta',\n            'Kyoto',\n            'Cancun',\n            'Hook',\n            'Braemar',\n            'Bogota',\n            'Da Nang',\n            'Girvan',\n            'Puebla',\n            'Quito',\n            'Laucala Island',\n            'Tetiaroa',\n            'Torno',\n            'Guayaquil',\n            'Slough',\n            'Lecce',\n            'Cartagena',\n            'Cabo San Lucas',\n            'Wanship',\n            'Ruhengeri',\n            'Johannesburg',\n            'Puerto Bories']\n            }\n            ],\n            \"title\": \"Hotel Location\"\n            }, \n       {\n        \"type\": \"panel\",\n        \"name\": \"Hotel Closure\",\n        \"elements\": [\n         {\n          \"type\": \"boolean\",\n          \"name\": \"IsHotelClosed\",\n          \"title\": \"Is your hotel closed ?\",\n          \"isRequired\": true,\n          \"labelTrue\": \"Yes\",\n          \"labelFalse\": \"No\"\n         },\n         {\n          \"type\": \"text\",\n          \"name\": \"HotelReopeningDate\",\n          \"visibleIf\": \"{IsHotelClosed} = true\",\n          \"width\": \"25\",\n          \"title\": \"If yes, expected reopening date ?\",\n          \"isRequired\": true,\n          \"inputType\": \"date\",\n          \"max\": \"2999-12-31\"\n         }\n        ],\n        \"title\": \"Hotel Closure\"\n       },\n       {\n        \"type\": \"panel\",\n        \"name\": \"Local containment\",\n        \"elements\": [\n         {\n          \"type\": \"boolean\",\n          \"name\": \"isHotelContainmentZone\",\n          \"title\": \"Is your hotel located in a containment zone ?\",\n          \"isRequired\": true,\n          \"labelTrue\": \"Yes\",\n          \"labelFalse\": \"No\"\n         },\n         {\n          \"type\": \"text\",\n          \"name\": \"HotelContainmentEndDate\",\n          \"visibleIf\": \"{isHotelContainmentZone} = true\",\n          \"width\": \"25\",\n          \"title\": \"If yes, official end of containment date ? (expected date)\",\n          \"isRequired\": true,\n          \"inputType\": \"date\",\n          \"max\": \"2999-12-31\"\n         }\n        ],\n        \"title\": \"Local containment\"\n       }\n      ],\n      \"title\": \"GENERAL INFORMATION (Page 1/3)\"\n     },\n     {\n      \"name\": \"LAST WEEK ACTIVITY\",\n      \"elements\": [\n       {\n        \"type\": \"panel\",\n        \"name\": \"LastWeekActivity\",\n        \"elements\": [\n         {\n          \"type\": \"text\",\n          \"name\": \"NbBookings\",\n          \"width\": \"10\",\n          \"title\": \"Total number of bookings\",\n          \"isRequired\": true,\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"This number cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"titleLocation\": \"left\",\n          \"inputType\": \"number\",\n          \"size\": 10\n         },\n         {\n          \"type\": \"text\",\n          \"name\": \"NbRoomNightsBooked\",\n          \"width\": \"10\",\n          \"title\": \"Total number of room nights booked\",\n          \"isRequired\": true,\n          \"requiredErrorText\": \"This number cannot be negative\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"This number cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"titleLocation\": \"left\",\n          \"inputType\": \"number\",\n          \"size\": 10\n         },\n         {\n          \"type\": \"text\",\n          \"name\": \"NbRoomNightsCanceled\",\n          \"width\": \"10\",\n          \"title\": \"Total number of room nights cancelled\",\n          \"isRequired\": true,\n          \"requiredErrorText\": \"This number cannot be negative\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"This number cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"titleLocation\": \"left\",\n          \"inputType\": \"number\",\n          \"size\": 10\n         }\n        ],\n        \"title\": \"Last Week Activity - General Information\"\n       },\n       {\n        \"type\": \"panel\",\n        \"name\": \"panel1\",\n        \"elements\": [\n         {\n          \"type\": \"matrixdropdown\",\n          \"name\": \"RoomsNightsSplit\",\n          \"width\": \"300\",\n          \"title\": \"Split of total room nights booked by client country of origin (countries 1 to 5 in number of nights descending order)\",\n          \"validators\": [\n           {\n            \"type\": \"expression\",\n            \"text\": \"\\\"Other Countries\\\" cannot be negative \",\n            \"expression\": \"({NbRoomNightsBooked}-{RoomsNightsSplit.Country1.NbRoomNights}-{RoomsNightsSplit.Country2.NbRoomNights}-{RoomsNightsSplit.Country3.NbRoomNights}-{RoomsNightsSplit.Country4.NbRoomNights}-{RoomsNightsSplit.Country5.NbRoomNights})>=0\"\n           },\n           {\n            \"type\": \"expression\",\n            \"text\": \"Room nights must be allocated to their country of origin. Please select your top 5 countries for last week, and fill the activity for each country.\",\n            \"expression\": \"((({NbRoomNightsBooked}-{RoomsNightsSplit.Country1.NbRoomNights}-{RoomsNightsSplit.Country2.NbRoomNights}-{RoomsNightsSplit.Country3.NbRoomNights}-{RoomsNightsSplit.Country4.NbRoomNights}-{RoomsNightsSplit.Country5.NbRoomNights})>0) AND {RoomsNightsSplit.Country5.NbRoomNights}>0 AND {RoomsNightsSplit.Country4.NbRoomNights}>0 AND {RoomsNightsSplit.Country3.NbRoomNights}>0 AND {RoomsNightsSplit.Country2.NbRoomNights}>0 AND  {RoomsNightsSplit.Country1.NbRoomNights}>0) OR (({NbRoomNightsBooked}-{RoomsNightsSplit.Country1.NbRoomNights}-{RoomsNightsSplit.Country2.NbRoomNights}-{RoomsNightsSplit.Country3.NbRoomNights}-{RoomsNightsSplit.Country4.NbRoomNights}-{RoomsNightsSplit.Country5.NbRoomNights})=0) \"\n           }\n          ],\n          \"columns\": [\n           {\n            \"name\": \"Country\",\n            \"title\": \"Country\",\n            \"cellType\": \"dropdown\",\n            \"width\": \"20\",\n            \"requiredIf\": \"{row.NbRoomNights} notempty\",\n            \"choicesOrder\": \"asc\",\n            \"choices\":[\n                'Ascension Island',\n                'Andorra',\n                'United Arab Emirates',\n                'Afghanistan',\n                'Antigua and Barbuda',\n                'Anguilla',\n                'Albania',\n                'Armenia',\n                'Netherlands Antilles',\n                'Angola',\n                'Antarctica',\n                'Argentina',\n                'American Samoa',\n                'Austria',\n                'Australia',\n                'Aruba',\n                'Aland Islands',\n                'Azerbaijan',\n                'Bosnia and Herzegovina',\n                'Barbados',\n                'Bangladesh',\n                'Belgium',\n                'Burkina Faso',\n                'Bulgaria',\n                'Bahrain',\n                'Burundi',\n                'Benin',\n                'Saint Barthelemy',\n                'Bermuda',\n                'Brunei',\n                'Bolivia',\n                'Caribbean Netherlands',\n                'Brazil',\n                'Bahamas',\n                'Bhutan',\n                'Bouvet Island',\n                'Botswana',\n                'Belarus',\n                'Belize',\n                'Canada',\n                'Cocos - Keeling Islands',\n                'Congo - Kinshasa',\n                'Central African Republic',\n                'Congo - Brazzaville',\n                'Switzerland',\n                'Ivory Coast',\n                'Cook Islands',\n                'Chile',\n                'Cameroon',\n                'China',\n                'Colombia',\n                'Clipperton Island',\n                'Costa Rica',\n                'Cuba',\n                'Cape Verde',\n                'Curaçao',\n                'Christmas Island',\n                'Cyprus',\n                'Czech Republic',\n                'Germany',\n                'Diego Garcia',\n                'Djibouti',\n                'Denmark',\n                'Dominica',\n                'Dominican Republic',\n                'Algeria',\n                'Ceuta and Melilla',\n                'Ecuador',\n                'Estonia',\n                'Egypt',\n                'Western Sahara',\n                'Eritrea',\n                'Spain',\n                'Ethiopia',\n                'Finland',\n                'Fiji',\n                'Falkland Islands',\n                'Micronesia',\n                'Faroe Islands',\n                'France',\n                'Gabon',\n                'United Kingdom',\n                'Grenada',\n                'Georgia',\n                'French Guiana',\n                'Guernsey',\n                'Ghana',\n                'Gibraltar',\n                'Greenland',\n                'Gambia',\n                'Guinea',\n                'Guadeloupe',\n                'Equatorial Guinea',\n                'Greece',\n                'South Georgia and the South Sandwich Islands',\n                'Guatemala',\n                'Guam',\n                'Guinea-Bissau',\n                'Guyana',\n                'Hong Kong',\n                'Heard Island and McDonald Islands',\n                'Honduras',\n                'Croatia',\n                'Haiti',\n                'Hungary',\n                'Canary Islands',\n                'Indonesia',\n                'Ireland',\n                'Israel',\n                'Isle of Man',\n                'India',\n                'British Indian Ocean Territory',\n                'Iraq',\n                'Iran',\n                'Iceland',\n                'Italy',\n                'Jersey',\n                'Jamaica',\n                'Jordan',\n                'Japan',\n                'Kenya',\n                'Kyrgyzstan',\n                'Cambodia',\n                'Kiribati',\n                'Comoros',\n                'Saint Kitts and Nevis',\n                'North Korea',\n                'South Korea',\n                'Kuwait',\n                'Cayman Islands',\n                'Kazakhstan',\n                'Laos',\n                'Lebanon',\n                'Saint Lucia',\n                'Liechtenstein',\n                'Sri Lanka',\n                'Liberia',\n                'Lesotho',\n                'Lithuania',\n                'Luxembourg',\n                'Latvia',\n                'Libya',\n                'Morocco',\n                'Monaco',\n                'Moldova',\n                'Montenegro',\n                'Saint Martin',\n                'Madagascar',\n                'Marshall Islands',\n                'Macedonia',\n                'Mali',\n                'Myanmar - Burma',\n                'Mongolia',\n                'Macau',\n                'Northern Mariana Islands',\n                'Martinique',\n                'Mauritania',\n                'Montserrat',\n                'Malta',\n                'Mauritius',\n                'Maldives',\n                'Malawi',\n                'Mexico',\n                'Malaysia',\n                'Mozambique',\n                'Namibia',\n                'New Caledonia',\n                'Niger',\n                'Norfolk Island',\n                'Nigeria',\n                'Nicaragua',\n                'Netherlands',\n                'Norway',\n                'Nepal',\n                'Nauru',\n                'Niue',\n                'New Zealand',\n                'Oman',\n                'Panama',\n                'Peru',\n                'French Polynesia',\n                'Papua New Guinea',\n                'Philippines',\n                'Pakistan',\n                'Poland',\n                'Saint Pierre and Miquelon',\n                'Pitcairn Islands',\n                'Puerto Rico',\n                'Palestinian Territories',\n                'Portugal',\n                'Palau',\n                'Paraguay',\n                'Qatar',\n                'Reunion',\n                'Romania',\n                'Serbia',\n                'Russia',\n                'Rwanda',\n                'Saudi Arabia',\n                'Solomon Islands',\n                'Seychelles',\n                'Sudan',\n                'Sweden',\n                'Singapore',\n                'Saint Helena',\n                'Slovenia',\n                'Svalbard and Jan Mayen',\n                'Slovakia',\n                'Sierra Leone',\n                'San Marino',\n                'Senegal',\n                'Somalia',\n                'Suriname',\n                'South Sudan',\n                'S√£o Tom√© and Pr√≠ncipe',\n                'El Salvador',\n                'Sint Maarten',\n                'Syria',\n                'Swaziland',\n                'Tristan da Cunha',\n                'Turks and Caicos Islands',\n                'Chad',\n                'French Southern Territories',\n                'Togo',\n                'Thailand',\n                'Tajikistan',\n                'Tokelau',\n                'Timor-Leste',\n                'Turkmenistan',\n                'Tunisia',\n                'Tonga',\n                'Turkey',\n                'Trinidad and Tobago',\n                'Tuvalu',\n                'Taiwan',\n                'Tanzania',\n                'Ukraine',\n                'Uganda',\n                'U.S. Minor Outlying Islands',\n                'United States',\n                'Uruguay',\n                'Uzbekistan',\n                'Vatican City',\n                'St Vincent and Grenadines',\n                'Venezuela',\n                'British Virgin Islands',\n                'U.S. Virgin Islands',\n                'Vietnam',\n                'Vanuatu',\n                'Wallis and Futuna',\n                'Samoa',\n                'Kosovo',\n                'Yemen',\n                'Mayotte',\n                'South Africa',\n                'Zambia',\n                'Zimbabwe'\n            ]\n           },\n           {\n            \"name\": \"NbRoomNights\",\n            \"title\": \"NB of room nights\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"requiredIf\": \"{row.Country} notempty\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"totalExpression\": \"{NbRoomNightsBooked}-{RoomsNightsSplit.Country1.NbRoomNights}-{RoomsNightsSplit.Country2.NbRoomNights}-{RoomsNightsSplit.Country3.NbRoomNights}-{RoomsNightsSplit.Country4.NbRoomNights}-{RoomsNightsSplit.Country5.NbRoomNights}\",\n            \"totalDisplayStyle\": \"decimal\",\n            \"inputType\": \"number\"\n           }\n          ],\n          \"rows\": [\n           {\n            \"value\": \"Country1\",\n            \"text\": \"Country of Origin #1 (largest)\"\n           },\n           {\n            \"value\": \"Country2\",\n            \"text\": \"Country of Origin #2 \"\n           },\n           {\n            \"value\": \"Country3\",\n            \"text\": \"Country of Origin #3\"\n           },\n           {\n            \"value\": \"Country4\",\n            \"text\": \"Country of Origin #4\"\n           },\n           {\n            \"value\": \"Country5\",\n            \"text\": \"Country of Origin #5\"\n           }\n          ],\n          \"totalText\": \"Other Countries\"\n         }\n        ]\n       },\n       {\n        \"type\": \"matrixdropdown\",\n        \"name\": \"SplitTotalRoomsBusinessSegment\",\n        \"width\": \"300\",\n        \"title\": \"Split of total room nights booked by business segment\",\n        \"validators\": [\n         {\n          \"type\": \"expression\",\n          \"text\": \"\\\"Remaining rooms nights booked by segment\\\" should be equals to 0.\",\n          \"expression\": \"({NbRoomNightsBooked}-{SplitTotalRoomsBusinessSegment.FIT.NbRoomsNightsBS}-{SplitTotalRoomsBusinessSegment.Corporate.NbRoomsNightsBS}-{SplitTotalRoomsBusinessSegment.MICE.NbRoomsNightsBS})=0\"\n         }\n        ],\n        \"columns\": [\n         {\n          \"name\": \"NbRoomsNightsBS\",\n          \"title\": \"Nb of rooms nights\",\n          \"cellType\": \"text\",\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"This number cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"{NbRoomNightsBooked}-{SplitTotalRoomsBusinessSegment.FIT.NbRoomsNightsBS}-{SplitTotalRoomsBusinessSegment.Corporate.NbRoomsNightsBS}-{SplitTotalRoomsBusinessSegment.MICE.NbRoomsNightsBS}\",\n          \"inputType\": \"number\"\n         }\n        ],\n        \"choices\": [\n         1,\n         2,\n         3,\n         4,\n         5\n        ],\n        \"cellType\": \"text\",\n        \"rows\": [\n         {\n          \"value\": \"FIT\",\n          \"text\": \"FIT\"\n         },\n         {\n          \"value\": \"MICE\",\n          \"text\": \"MICE\"\n         },\n         {\n          \"value\": \"Corporate\",\n          \"text\": \"Corporate\"\n         }\n        ],\n        \"totalText\": \"Remaining room nights to be allocated to a business segment\"\n       },\n       {\n        \"type\": \"panel\",\n        \"name\": \"panel3\",\n        \"elements\": [\n         {\n          \"type\": \"matrixdropdown\",\n          \"name\": \"SplitByMonth\",\n          \"title\": \"Split of total room nights booked by stay month\",\n          \"validators\": [\n           {\n            \"type\": \"expression\",\n            \"text\": \"\\\"Stay from October 2020 or later\\\" cannot be negative\",\n            \"expression\": \"{SplitByMonth.NbRoomsByMonth.M7} >= 0\"\n           }\n          ],\n          \"columns\": [\n           {\n            \"name\": \"M1\",\n            \"title\": \"Stay in April 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M2\",\n            \"title\": \"Stay in May 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": -19\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M3\",\n            \"title\": \"Stay in June 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M4\",\n            \"title\": \"Stay in July 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M5\",\n            \"title\": \"Stay in August 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M6\",\n            \"title\": \"Stay in September 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M7\",\n            \"title\": \"Stay from October 2020 or later\",\n            \"cellType\": \"expression\",\n            \"width\": \"10\",\n            \"expression\": \"{NbRoomNightsBooked}-{row.M1}-{row.M2}-{row.M3}-{row.M4}-{row.M5}-{row.M6}\"\n           }\n          ],\n          \"choices\": [\n           1,\n           2,\n           3,\n           4,\n           5\n          ],\n          \"cellType\": \"text\",\n          \"rows\": [\n           {\n            \"value\": \"NbRoomsByMonth\",\n            \"text\": \"Number of room nights booked last week\"\n           }\n          ]\n         }\n        ]\n       }\n      ],\n      \"title\": \"LAST WEEK ACTIVITY (from Monday to Sunday)(Page 2/3)\"\n     },\n     {\n      \"name\": \"ON THE BOOK\",\n      \"elements\": [\n       {\n        \"type\": \"text\",\n        \"name\": \"TotalNumberRoomAvailable\",\n        \"width\": \"10\",\n        \"title\": \"Total number of rooms in your hotel\",\n        \"isRequired\": true,\n        \"validators\": [\n         {\n          \"type\": \"numeric\",\n          \"text\": \"This number cannot be negative\",\n          \"minValue\": 0\n         }\n        ],\n        \"titleLocation\": \"left\",\n        \"inputType\": \"number\",\n        \"size\": 10\n       },\n       {\n        \"type\": \"matrixdropdown\",\n        \"name\": \"SplitTotalRoomAvailable\",\n        \"title\": \"Split of total room nights available for sale by month\",\n        \"validators\": [\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for September 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M6}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M6})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M6} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M6} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M6}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M6}=0) \"\n         },\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for August 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M5}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M5})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M5} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M5} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M5}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M5}=0) \"\n         },\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for July 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M4}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M4})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M4} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M4} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M4}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M4}=0) \"\n         },\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for June 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M3}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M3})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M3} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M3} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M3}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M3}=0) \"\n         },\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for April 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M1}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M1})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M1} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M1} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M1}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M1}=0) \"\n         },\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for May 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M2}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M2})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M2} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M2} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M2}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M2}=0) \"\n         }\n        ],\n        \"columns\": [\n         {\n          \"name\": \"M1\",\n          \"title\": \"April 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M1}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M1})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         },\n         {\n          \"name\": \"M2\",\n          \"title\": \"May 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M2}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M2})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         },\n         {\n          \"name\": \"M3\",\n          \"title\": \"June 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M3}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M3})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         },\n         {\n          \"name\": \"M4\",\n          \"title\": \"July 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M4}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M4})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         },\n         {\n          \"name\": \"M5\",\n          \"title\": \"August 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M5}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M5})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         },\n         {\n          \"name\": \"M6\",\n          \"title\": \"September 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M6}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M6})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         }\n        ],\n        \"choices\": [\n         1,\n         2,\n         3,\n         4,\n         5\n        ],\n        \"cellType\": \"text\",\n        \"rows\": [\n         {\n          \"value\": \"NbOfOccupiedRooms\",\n          \"text\": \"Number of occupied rooms\"\n         },\n         {\n          \"value\": \"TotalRoomNightAvailable\",\n          \"text\": \"Total \\\"room nights\\\" available for sale\"\n         }\n        ],\n        \"totalText\": \"Occupancy Rate (%)\"\n       },\n       {\n        \"type\": \"panel\",\n        \"name\": \"panel4\"\n       }\n      ],\n      \"title\": \"ON THE BOOK (stay month)(Page 3/3)\"\n     }\n    ]\n   };\n\nexport default firstSurvey;","const finalSurvey = {\n    \"pages\": [\n     {\n      \"name\": \"GENERAL INFORMATION\",\n      \"elements\": [\n       {\n        \"type\": \"panel\",\n        \"name\": \"Hotel Closure\",\n        \"elements\": [\n         {\n          \"type\": \"boolean\",\n          \"name\": \"IsHotelClosed\",\n          \"title\": \"Is your hotel closed ?\",\n          \"isRequired\": true,\n          \"labelTrue\": \"Yes\",\n          \"labelFalse\": \"No\"\n         },\n         {\n          \"type\": \"text\",\n          \"name\": \"HotelReopeningDate\",\n          \"visibleIf\": \"{IsHotelClosed} = true\",\n          \"width\": \"25\",\n          \"title\": \"If yes, expected reopening date ?\",\n          \"isRequired\": true,\n          \"inputType\": \"date\",\n          \"max\": \"2999-12-31\"\n         }\n        ],\n        \"title\": \"Hotel Closure\"\n       },\n       {\n        \"type\": \"panel\",\n        \"name\": \"Local containment\",\n        \"elements\": [\n         {\n          \"type\": \"boolean\",\n          \"name\": \"isHotelContainmentZone\",\n          \"title\": \"Is your hotel located in a containment zone ?\",\n          \"isRequired\": true,\n          \"labelTrue\": \"Yes\",\n          \"labelFalse\": \"No\"\n         },\n         {\n          \"type\": \"text\",\n          \"name\": \"HotelContainmentEndDate\",\n          \"visibleIf\": \"{isHotelContainmentZone} = true\",\n          \"width\": \"25\",\n          \"title\": \"If yes, official end of containment date ? (expected date)\",\n          \"isRequired\": true,\n          \"inputType\": \"date\",\n          \"max\": \"2999-12-31\"\n         }\n        ],\n        \"title\": \"Local containment\"\n       }\n      ],\n      \"title\": \"GENERAL INFORMATION (Page 1/3)\"\n     },\n     {\n      \"name\": \"LAST WEEK ACTIVITY\",\n      \"elements\": [\n       {\n        \"type\": \"panel\",\n        \"name\": \"LastWeekActivity\",\n        \"elements\": [\n         {\n          \"type\": \"text\",\n          \"name\": \"NbBookings\",\n          \"width\": \"10\",\n          \"title\": \"Total number of bookings\",\n          \"isRequired\": true,\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"This number cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"titleLocation\": \"left\",\n          \"inputType\": \"number\",\n          \"size\": 10\n         },\n         {\n          \"type\": \"text\",\n          \"name\": \"NbRoomNightsBooked\",\n          \"width\": \"10\",\n          \"title\": \"Total number of room nights booked\",\n          \"isRequired\": true,\n          \"requiredErrorText\": \"This number cannot be negative\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"This number cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"titleLocation\": \"left\",\n          \"inputType\": \"number\",\n          \"size\": 10\n         },\n         {\n          \"type\": \"text\",\n          \"name\": \"NbRoomNightsCanceled\",\n          \"width\": \"10\",\n          \"title\": \"Total number of room nights cancelled\",\n          \"isRequired\": true,\n          \"requiredErrorText\": \"This number cannot be negative\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"This number cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"titleLocation\": \"left\",\n          \"inputType\": \"number\",\n          \"size\": 10\n         }\n        ],\n        \"title\": \"Last Week Activity - General Information\"\n       },\n       {\n        \"type\": \"panel\",\n        \"name\": \"panel1\",\n        \"elements\": [\n         {\n          \"type\": \"matrixdropdown\",\n          \"name\": \"RoomsNightsSplit\",\n          \"width\": \"300\",\n          \"title\": \"Split of total room nights booked by client country of origin (countries 1 to 5 in number of nights descending order)\",\n          \"validators\": [\n           {\n            \"type\": \"expression\",\n            \"text\": \"\\\"Other Countries\\\" cannot be negative \",\n            \"expression\": \"({NbRoomNightsBooked}-{RoomsNightsSplit.Country1.NbRoomNights}-{RoomsNightsSplit.Country2.NbRoomNights}-{RoomsNightsSplit.Country3.NbRoomNights}-{RoomsNightsSplit.Country4.NbRoomNights}-{RoomsNightsSplit.Country5.NbRoomNights})>=0\"\n           },\n           {\n            \"type\": \"expression\",\n            \"text\": \"Room nights must be allocated to their country of origin. Please select your top 5 countries for last week, and fill the activity for each country.\",\n            \"expression\": \"((({NbRoomNightsBooked}-{RoomsNightsSplit.Country1.NbRoomNights}-{RoomsNightsSplit.Country2.NbRoomNights}-{RoomsNightsSplit.Country3.NbRoomNights}-{RoomsNightsSplit.Country4.NbRoomNights}-{RoomsNightsSplit.Country5.NbRoomNights})>0) AND {RoomsNightsSplit.Country5.NbRoomNights}>0 AND {RoomsNightsSplit.Country4.NbRoomNights}>0 AND {RoomsNightsSplit.Country3.NbRoomNights}>0 AND {RoomsNightsSplit.Country2.NbRoomNights}>0 AND  {RoomsNightsSplit.Country1.NbRoomNights}>0) OR (({NbRoomNightsBooked}-{RoomsNightsSplit.Country1.NbRoomNights}-{RoomsNightsSplit.Country2.NbRoomNights}-{RoomsNightsSplit.Country3.NbRoomNights}-{RoomsNightsSplit.Country4.NbRoomNights}-{RoomsNightsSplit.Country5.NbRoomNights})=0) \"\n           }\n          ],\n          \"columns\": [\n           {\n            \"name\": \"Country\",\n            \"title\": \"Country\",\n            \"cellType\": \"dropdown\",\n            \"width\": \"20\",\n            \"requiredIf\": \"{row.NbRoomNights} notempty\",\n            \"choicesOrder\": \"asc\",\n            \"choices\":[\n                'Ascension Island',\n                'Andorra',\n                'United Arab Emirates',\n                'Afghanistan',\n                'Antigua and Barbuda',\n                'Anguilla',\n                'Albania',\n                'Armenia',\n                'Netherlands Antilles',\n                'Angola',\n                'Antarctica',\n                'Argentina',\n                'American Samoa',\n                'Austria',\n                'Australia',\n                'Aruba',\n                'Aland Islands',\n                'Azerbaijan',\n                'Bosnia and Herzegovina',\n                'Barbados',\n                'Bangladesh',\n                'Belgium',\n                'Burkina Faso',\n                'Bulgaria',\n                'Bahrain',\n                'Burundi',\n                'Benin',\n                'Saint Barthelemy',\n                'Bermuda',\n                'Brunei',\n                'Bolivia',\n                'Caribbean Netherlands',\n                'Brazil',\n                'Bahamas',\n                'Bhutan',\n                'Bouvet Island',\n                'Botswana',\n                'Belarus',\n                'Belize',\n                'Canada',\n                'Cocos - Keeling Islands',\n                'Congo - Kinshasa',\n                'Central African Republic',\n                'Congo - Brazzaville',\n                'Switzerland',\n                'Ivory Coast',\n                'Cook Islands',\n                'Chile',\n                'Cameroon',\n                'China',\n                'Colombia',\n                'Clipperton Island',\n                'Costa Rica',\n                'Cuba',\n                'Cape Verde',\n                'Curaçao',\n                'Christmas Island',\n                'Cyprus',\n                'Czech Republic',\n                'Germany',\n                'Diego Garcia',\n                'Djibouti',\n                'Denmark',\n                'Dominica',\n                'Dominican Republic',\n                'Algeria',\n                'Ceuta and Melilla',\n                'Ecuador',\n                'Estonia',\n                'Egypt',\n                'Western Sahara',\n                'Eritrea',\n                'Spain',\n                'Ethiopia',\n                'Finland',\n                'Fiji',\n                'Falkland Islands',\n                'Micronesia',\n                'Faroe Islands',\n                'France',\n                'Gabon',\n                'United Kingdom',\n                'Grenada',\n                'Georgia',\n                'French Guiana',\n                'Guernsey',\n                'Ghana',\n                'Gibraltar',\n                'Greenland',\n                'Gambia',\n                'Guinea',\n                'Guadeloupe',\n                'Equatorial Guinea',\n                'Greece',\n                'South Georgia and the South Sandwich Islands',\n                'Guatemala',\n                'Guam',\n                'Guinea-Bissau',\n                'Guyana',\n                'Hong Kong',\n                'Heard Island and McDonald Islands',\n                'Honduras',\n                'Croatia',\n                'Haiti',\n                'Hungary',\n                'Canary Islands',\n                'Indonesia',\n                'Ireland',\n                'Israel',\n                'Isle of Man',\n                'India',\n                'British Indian Ocean Territory',\n                'Iraq',\n                'Iran',\n                'Iceland',\n                'Italy',\n                'Jersey',\n                'Jamaica',\n                'Jordan',\n                'Japan',\n                'Kenya',\n                'Kyrgyzstan',\n                'Cambodia',\n                'Kiribati',\n                'Comoros',\n                'Saint Kitts and Nevis',\n                'North Korea',\n                'South Korea',\n                'Kuwait',\n                'Cayman Islands',\n                'Kazakhstan',\n                'Laos',\n                'Lebanon',\n                'Saint Lucia',\n                'Liechtenstein',\n                'Sri Lanka',\n                'Liberia',\n                'Lesotho',\n                'Lithuania',\n                'Luxembourg',\n                'Latvia',\n                'Libya',\n                'Morocco',\n                'Monaco',\n                'Moldova',\n                'Montenegro',\n                'Saint Martin',\n                'Madagascar',\n                'Marshall Islands',\n                'Macedonia',\n                'Mali',\n                'Myanmar - Burma',\n                'Mongolia',\n                'Macau',\n                'Northern Mariana Islands',\n                'Martinique',\n                'Mauritania',\n                'Montserrat',\n                'Malta',\n                'Mauritius',\n                'Maldives',\n                'Malawi',\n                'Mexico',\n                'Malaysia',\n                'Mozambique',\n                'Namibia',\n                'New Caledonia',\n                'Niger',\n                'Norfolk Island',\n                'Nigeria',\n                'Nicaragua',\n                'Netherlands',\n                'Norway',\n                'Nepal',\n                'Nauru',\n                'Niue',\n                'New Zealand',\n                'Oman',\n                'Panama',\n                'Peru',\n                'French Polynesia',\n                'Papua New Guinea',\n                'Philippines',\n                'Pakistan',\n                'Poland',\n                'Saint Pierre and Miquelon',\n                'Pitcairn Islands',\n                'Puerto Rico',\n                'Palestinian Territories',\n                'Portugal',\n                'Palau',\n                'Paraguay',\n                'Qatar',\n                'Reunion',\n                'Romania',\n                'Serbia',\n                'Russia',\n                'Rwanda',\n                'Saudi Arabia',\n                'Solomon Islands',\n                'Seychelles',\n                'Sudan',\n                'Sweden',\n                'Singapore',\n                'Saint Helena',\n                'Slovenia',\n                'Svalbard and Jan Mayen',\n                'Slovakia',\n                'Sierra Leone',\n                'San Marino',\n                'Senegal',\n                'Somalia',\n                'Suriname',\n                'South Sudan',\n                'S√£o Tom√© and Pr√≠ncipe',\n                'El Salvador',\n                'Sint Maarten',\n                'Syria',\n                'Swaziland',\n                'Tristan da Cunha',\n                'Turks and Caicos Islands',\n                'Chad',\n                'French Southern Territories',\n                'Togo',\n                'Thailand',\n                'Tajikistan',\n                'Tokelau',\n                'Timor-Leste',\n                'Turkmenistan',\n                'Tunisia',\n                'Tonga',\n                'Turkey',\n                'Trinidad and Tobago',\n                'Tuvalu',\n                'Taiwan',\n                'Tanzania',\n                'Ukraine',\n                'Uganda',\n                'U.S. Minor Outlying Islands',\n                'United States',\n                'Uruguay',\n                'Uzbekistan',\n                'Vatican City',\n                'St Vincent and Grenadines',\n                'Venezuela',\n                'British Virgin Islands',\n                'U.S. Virgin Islands',\n                'Vietnam',\n                'Vanuatu',\n                'Wallis and Futuna',\n                'Samoa',\n                'Kosovo',\n                'Yemen',\n                'Mayotte',\n                'South Africa',\n                'Zambia',\n                'Zimbabwe'\n            ]\n           },\n           {\n            \"name\": \"NbRoomNights\",\n            \"title\": \"NB of room nights\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"requiredIf\": \"{row.Country} notempty\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"totalExpression\": \"{NbRoomNightsBooked}-{RoomsNightsSplit.Country1.NbRoomNights}-{RoomsNightsSplit.Country2.NbRoomNights}-{RoomsNightsSplit.Country3.NbRoomNights}-{RoomsNightsSplit.Country4.NbRoomNights}-{RoomsNightsSplit.Country5.NbRoomNights}\",\n            \"totalDisplayStyle\": \"decimal\",\n            \"inputType\": \"number\"\n           }\n          ],\n          \"rows\": [\n           {\n            \"value\": \"Country1\",\n            \"text\": \"Country of Origin #1 (largest)\"\n           },\n           {\n            \"value\": \"Country2\",\n            \"text\": \"Country of Origin #2 \"\n           },\n           {\n            \"value\": \"Country3\",\n            \"text\": \"Country of Origin #3\"\n           },\n           {\n            \"value\": \"Country4\",\n            \"text\": \"Country of Origin #4\"\n           },\n           {\n            \"value\": \"Country5\",\n            \"text\": \"Country of Origin #5\"\n           }\n          ],\n          \"totalText\": \"Other Countries\"\n         }\n        ]\n       },\n       {\n        \"type\": \"matrixdropdown\",\n        \"name\": \"SplitTotalRoomsBusinessSegment\",\n        \"width\": \"300\",\n        \"title\": \"Split of total room nights booked by business segment\",\n        \"validators\": [\n         {\n          \"type\": \"expression\",\n          \"text\": \"\\\"Remaining rooms nights booked by segment\\\" should be equals to 0.\",\n          \"expression\": \"({NbRoomNightsBooked}-{SplitTotalRoomsBusinessSegment.FIT.NbRoomsNightsBS}-{SplitTotalRoomsBusinessSegment.Corporate.NbRoomsNightsBS}-{SplitTotalRoomsBusinessSegment.MICE.NbRoomsNightsBS})=0\"\n         }\n        ],\n        \"columns\": [\n         {\n          \"name\": \"NbRoomsNightsBS\",\n          \"title\": \"Nb of rooms nights\",\n          \"cellType\": \"text\",\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"This number cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"{NbRoomNightsBooked}-{SplitTotalRoomsBusinessSegment.FIT.NbRoomsNightsBS}-{SplitTotalRoomsBusinessSegment.Corporate.NbRoomsNightsBS}-{SplitTotalRoomsBusinessSegment.MICE.NbRoomsNightsBS}\",\n          \"inputType\": \"number\"\n         }\n        ],\n        \"choices\": [\n         1,\n         2,\n         3,\n         4,\n         5\n        ],\n        \"cellType\": \"text\",\n        \"rows\": [\n         {\n          \"value\": \"FIT\",\n          \"text\": \"FIT\"\n         },\n         {\n          \"value\": \"MICE\",\n          \"text\": \"MICE\"\n         },\n         {\n          \"value\": \"Corporate\",\n          \"text\": \"Corporate\"\n         }\n        ],\n        \"totalText\": \"Remaining room nights to be allocated to a business segment\"\n       },\n       {\n        \"type\": \"panel\",\n        \"name\": \"panel3\",\n        \"elements\": [\n         {\n          \"type\": \"matrixdropdown\",\n          \"name\": \"SplitByMonth\",\n          \"title\": \"Split of total room nights booked by stay month\",\n          \"validators\": [\n           {\n            \"type\": \"expression\",\n            \"text\": \"\\\"Stay from October 2020 or later\\\" cannot be negative\",\n            \"expression\": \"{SplitByMonth.NbRoomsByMonth.M7} >= 0\"\n           }\n          ],\n          \"columns\": [\n           {\n            \"name\": \"M1\",\n            \"title\": \"Stay in April 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M2\",\n            \"title\": \"Stay in May 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": -19\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M3\",\n            \"title\": \"Stay in June 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M4\",\n            \"title\": \"Stay in July 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M5\",\n            \"title\": \"Stay in August 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M6\",\n            \"title\": \"Stay in September 2020\",\n            \"cellType\": \"text\",\n            \"width\": \"10\",\n            \"validators\": [\n             {\n              \"type\": \"numeric\",\n              \"text\": \"This number cannot be negative\",\n              \"minValue\": 0\n             }\n            ],\n            \"inputType\": \"number\"\n           },\n           {\n            \"name\": \"M7\",\n            \"title\": \"Stay from October 2020 or later\",\n            \"cellType\": \"expression\",\n            \"width\": \"10\",\n            \"expression\": \"{NbRoomNightsBooked}-{row.M1}-{row.M2}-{row.M3}-{row.M4}-{row.M5}-{row.M6}\"\n           }\n          ],\n          \"choices\": [\n           1,\n           2,\n           3,\n           4,\n           5\n          ],\n          \"cellType\": \"text\",\n          \"rows\": [\n           {\n            \"value\": \"NbRoomsByMonth\",\n            \"text\": \"Number of room nights booked last week\"\n           }\n          ]\n         }\n        ]\n       }\n      ],\n      \"title\": \"LAST WEEK ACTIVITY (from Monday to Sunday)(Page 2/3)\"\n     },\n     {\n      \"name\": \"ON THE BOOK\",\n      \"elements\": [\n       {\n        \"type\": \"text\",\n        \"name\": \"TotalNumberRoomAvailable\",\n        \"width\": \"10\",\n        \"title\": \"Total number of rooms in your hotel\",\n        \"isRequired\": true,\n        \"validators\": [\n         {\n          \"type\": \"numeric\",\n          \"text\": \"This number cannot be negative\",\n          \"minValue\": 0\n         }\n        ],\n        \"titleLocation\": \"left\",\n        \"inputType\": \"number\",\n        \"size\": 10\n       },\n       {\n        \"type\": \"matrixdropdown\",\n        \"name\": \"SplitTotalRoomAvailable\",\n        \"title\": \"Split of total room nights available for sale by month\",\n        \"validators\": [\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for September 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M6}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M6})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M6} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M6} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M6}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M6}=0) \"\n         },\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for August 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M5}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M5})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M5} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M5} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M5}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M5}=0) \"\n         },\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for July 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M4}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M4})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M4} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M4} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M4}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M4}=0) \"\n         },\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for June 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M3}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M3})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M3} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M3} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M3}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M3}=0) \"\n         },\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for April 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M1}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M1})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M1} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M1} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M1}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M1}=0) \"\n         },\n         {\n          \"type\": \"expression\",\n          \"text\": \"The pourcentage is not correct for May 2020.\",\n          \"expression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M2}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M2})<=1 OR ({SplitTotalRoomAvailable.TotalRoomNightAvailable.M2} empty  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M2} empty) OR \\n({SplitTotalRoomAvailable.TotalRoomNightAvailable.M2}=0  AND {SplitTotalRoomAvailable.NbOfOccupiedRooms.M2}=0) \"\n         }\n        ],\n        \"columns\": [\n         {\n          \"name\": \"M1\",\n          \"title\": \"April 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M1}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M1})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         },\n         {\n          \"name\": \"M2\",\n          \"title\": \"May 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M2}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M2})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         },\n         {\n          \"name\": \"M3\",\n          \"title\": \"June 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M3}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M3})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         },\n         {\n          \"name\": \"M4\",\n          \"title\": \"July 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M4}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M4})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         },\n         {\n          \"name\": \"M5\",\n          \"title\": \"August 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M5}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M5})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         },\n         {\n          \"name\": \"M6\",\n          \"title\": \"September 2020\",\n          \"cellType\": \"text\",\n          \"isRequired\": true,\n          \"width\": \"10\",\n          \"validators\": [\n           {\n            \"type\": \"numeric\",\n            \"text\": \"The numbers cannot be negative\",\n            \"minValue\": 0\n           }\n          ],\n          \"totalExpression\": \"({SplitTotalRoomAvailable.NbOfOccupiedRooms.M6}/{SplitTotalRoomAvailable.TotalRoomNightAvailable.M6})\",\n          \"totalDisplayStyle\": \"percent\",\n          \"inputType\": \"number\"\n         }\n        ],\n        \"choices\": [\n         1,\n         2,\n         3,\n         4,\n         5\n        ],\n        \"cellType\": \"text\",\n        \"rows\": [\n         {\n          \"value\": \"NbOfOccupiedRooms\",\n          \"text\": \"Number of occupied rooms\"\n         },\n         {\n          \"value\": \"TotalRoomNightAvailable\",\n          \"text\": \"Total \\\"room nights\\\" available for sale\"\n         }\n        ],\n        \"totalText\": \"Occupancy Rate (%)\"\n       },\n       {\n        \"type\": \"panel\",\n        \"name\": \"panel4\"\n       }\n      ],\n      \"title\": \"ON THE BOOK (stay month)(Page 3/3)\"\n     }\n    ]\n   };\n\n\n   export default finalSurvey;","import React, { Component } from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport { createSurvey, createTracking, createFirstLogin, createClientCountry } from \"../graphql/mutations\";\nimport { listTrackings } from '../graphql/queries';\nimport { graphqlOperation, API } from \"aws-amplify\";\nimport { history } from '../AppWithAuth';\nimport firstSurvey from '../survey/FirstServey';\nimport finalSurvey from '../survey/FinalSurvey';\n\nSurvey.StylesManager.applyTheme(\"orange\");\n\nclass SurveyComponent extends Component {\n\n  state = {\n    isCompleted : false,\n    finalResult : \"\"\n  }\n\n  onCompleteComponent = async (result) => {\n    var hotelLocation=\"\";\n    try {\n      console.log(this.props.hotelLocation);\n      if (this.props.hotelLocation === \"\"){\n        hotelLocation = result.data.HotelLocation;\n        await API.graphql(graphqlOperation(createFirstLogin, {input:{'Email':this.props.userAttributes.email, 'Sub':this.props.userAttributes.sub,'LocationHotel':result.data.HotelLocation}}));\n      } else {\n        hotelLocation = this.props.hotelLocation;\n      }\n\n      const trakings = await API.graphql(graphqlOperation(listTrackings,  {\n          filter: {\n              and : [{\n              Sub: {\n                  eq: this.props.userAttributes.sub\n              },\n              Week:{\n                eq : 'W1'\n              }\n            }]\n          }\n        }));\n\n      if (trakings.data.listTrackings.items.length === 0) {\n       console.log(result.data);\n       console.log(this.props.hotelLocation);\n\n        var Week = 'W2'\n\n        //Page1 \n        var HotelLocation = hotelLocation;\n        var IsHotelClosed = result.data.IsHotelClosed;\n        var HotelReopeningDate = result.data.HotelReopeningDate;\n        var IsHotelContainmentZone = result.data.isHotelContainmentZone;\n        var HotelContainmentEndDate = result.data.HotelContainmentEndDate;\n\n        //Page 2\n\n        var NbBookings = result.data.NbBookings;\n        var NbRoomNightsBooked = result.data.NbRoomNightsBooked;\n        var NbRoomNightsCanceled = result.data.NbRoomNightsCanceled;\n        var SplitTotalRoomsBusinessSegment = result.data['SplitTotalRoomsBusinessSegment'];\n\n        var  NbRoomNightsBookedFIT = 0;\n        var  NbRoomNightsBookedMICE = 0;\n        var  NbRoomNightsBookedCorporate = 0;\n        var  RemainingRoomNightsBySegment = 0;\n        if (SplitTotalRoomsBusinessSegment) {\n          NbRoomNightsBookedFIT = SplitTotalRoomsBusinessSegment['FIT']? SplitTotalRoomsBusinessSegment['FIT'].NbRoomsNightsBS : 0;\n          NbRoomNightsBookedMICE = SplitTotalRoomsBusinessSegment['MICE']?SplitTotalRoomsBusinessSegment['MICE'].NbRoomsNightsBS: 0;\n          NbRoomNightsBookedCorporate = SplitTotalRoomsBusinessSegment['Corporate']?SplitTotalRoomsBusinessSegment['Corporate'].NbRoomsNightsBS : 0;\n        }\n    \n        RemainingRoomNightsBySegment = result.data['SplitTotalRoomsBusinessSegment-total'].NbRoomsNightsBS;\n     \n        \n        var RoomsNightsSplit = result.data['RoomsNightsSplit'];\n        var RoomNightsCountry1 = null;\n        var NbRoomNightsBookedCountry1 = 0;\n        var RoomNightsCountry2 = null;\n        var NbRoomNightsBookedCountry2 = 0;\n        var RoomNightsCountry3 = null;\n        var NbRoomNightsBookedCountry3 = 0;\n        var RoomNightsCountry4 = null;\n        var NbRoomNightsBookedCountry4 = 0;\n        var RoomNightsCountry5 = null;\n        var NbRoomNightsBookedCountry5 = 0;\n        if (RoomsNightsSplit) {\n            RoomNightsCountry1 = RoomsNightsSplit['Country1']?RoomsNightsSplit['Country1'].Country?RoomsNightsSplit['Country1'].Country:null:null;\n            NbRoomNightsBookedCountry1 = RoomsNightsSplit['Country1']?RoomsNightsSplit['Country1'].NbRoomNights:0;\n            RoomNightsCountry2 = RoomsNightsSplit['Country2']?RoomsNightsSplit['Country2'].Country?RoomsNightsSplit['Country2'].Country:null:null;\n            NbRoomNightsBookedCountry2 = RoomsNightsSplit['Country2']?RoomsNightsSplit['Country2'].NbRoomNights:0;\n            RoomNightsCountry3 = RoomsNightsSplit['Country3']?RoomsNightsSplit['Country3'].Country?RoomsNightsSplit['Country3'].Country:null:null;\n            NbRoomNightsBookedCountry3 = RoomsNightsSplit['Country3']?RoomsNightsSplit['Country3'].NbRoomNights:0;\n            RoomNightsCountry4 = RoomsNightsSplit['Country4']?RoomsNightsSplit['Country4'].Country?RoomsNightsSplit['Country4'].Country:null:null;\n            NbRoomNightsBookedCountry4 = RoomsNightsSplit['Country4']?RoomsNightsSplit['Country4'].NbRoomNights:0;\n            RoomNightsCountry5 = RoomsNightsSplit['Country5']?RoomsNightsSplit['Country5'].Country?RoomsNightsSplit['Country5'].Country:null:null;\n            NbRoomNightsBookedCountry5 = RoomsNightsSplit['Country5']?RoomsNightsSplit['Country5'].NbRoomNights:0;\n        }\n        console.log(RoomNightsCountry1);\n        console.log(NbRoomNightsBookedCountry1);\n        console.log(RoomNightsCountry2);\n        console.log(NbRoomNightsBookedCountry2);\n        \n        var SplitByMonth = result.data['SplitByMonth'];\n        var  NbRoomNightsBookedLastWeekApril = 0;\n        var  NbRoomNightsBookedLastWeekMay = 0;\n        var  NbRoomNightsBookedLastWeekJune = 0;\n        var  NbRoomNightsBookedLastWeekJuly = 0;\n        var  NbRoomNightsBookedLastWeekAugust = 0;\n        var  NbRoomNightsBookedLastWeekSeptember =0;\n        var  TotalNightsBookedLastWeek = 0;\n\n        if (SplitByMonth) {\n          NbRoomNightsBookedLastWeekApril = SplitByMonth['NbRoomsByMonth']?SplitByMonth['NbRoomsByMonth'].M1?SplitByMonth['NbRoomsByMonth'].M1:0:0;\n          NbRoomNightsBookedLastWeekMay = SplitByMonth['NbRoomsByMonth']?SplitByMonth['NbRoomsByMonth'].M2?SplitByMonth['NbRoomsByMonth'].M2:0:0;\n          NbRoomNightsBookedLastWeekJune = SplitByMonth['NbRoomsByMonth']?SplitByMonth['NbRoomsByMonth'].M3?SplitByMonth['NbRoomsByMonth'].M3:0:0;\n          NbRoomNightsBookedLastWeekJuly = SplitByMonth['NbRoomsByMonth']?SplitByMonth['NbRoomsByMonth'].M4?SplitByMonth['NbRoomsByMonth'].M4:0:0;\n          NbRoomNightsBookedLastWeekAugust = SplitByMonth['NbRoomsByMonth']?SplitByMonth['NbRoomsByMonth'].M5?SplitByMonth['NbRoomsByMonth'].M5:0:0;\n          NbRoomNightsBookedLastWeekSeptember = SplitByMonth['NbRoomsByMonth']?SplitByMonth['NbRoomsByMonth'].M6?SplitByMonth['NbRoomsByMonth'].M6:0:0;\n          TotalNightsBookedLastWeek = SplitByMonth['NbRoomsByMonth']?SplitByMonth['NbRoomsByMonth'].M7?SplitByMonth['NbRoomsByMonth'].M7:0:0;\n        }\n        console.log(NbRoomNightsBookedLastWeekApril);\n        console.log(NbRoomNightsBookedLastWeekMay);\n\n      \n        //Page 3\n        \n        var TotalNumberRoomAvailable = result.data.TotalNumberRoomAvailable;\n\n        var SplitTotalRoomAvailable = result.data['SplitTotalRoomAvailable'];\n        var  NbOccupiedRoomNightsAvril= 0;\n          var  NbOccupiedRoomNightsMay=  0;\n          var  NbOccupiedRoomNightsJune=  0;\n          var  NbOccupiedRoomNightsJuly=  0;\n          var  NbOccupiedRoomNightsAugust=  0;\n          var  NbOccupiedRoomNightsSeptember=  0;\n          var  NbTotalRoomNightsAvril=  0;\n          var  NbTotalRoomNightsMay=  0;\n          var  NbTotalRoomNightsJune=  0;\n          var  NbTotalRoomNightsJuly=  0;\n          var  NbTotalRoomNightsAugust=  0;\n          var  NbTotalRoomNightsSeptember=  0;\n  \n        if (SplitTotalRoomAvailable) {\n          NbOccupiedRoomNightsAvril= SplitTotalRoomAvailable['NbOfOccupiedRooms']?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M1?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M1:0:0;\n          NbOccupiedRoomNightsMay=  SplitTotalRoomAvailable['NbOfOccupiedRooms']?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M2?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M2:0:0;\n          NbOccupiedRoomNightsJune=  SplitTotalRoomAvailable['NbOfOccupiedRooms']?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M3?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M3:0:0;\n          NbOccupiedRoomNightsJuly=  SplitTotalRoomAvailable['NbOfOccupiedRooms']?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M4?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M4:0:0;\n          NbOccupiedRoomNightsAugust=  SplitTotalRoomAvailable['NbOfOccupiedRooms']?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M5?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M5:0:0;\n          NbOccupiedRoomNightsSeptember=  SplitTotalRoomAvailable['NbOfOccupiedRooms']?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M6?SplitTotalRoomAvailable['NbOfOccupiedRooms'].M6:0:0;\n          NbTotalRoomNightsAvril=  SplitTotalRoomAvailable['TotalRoomNightAvailable']?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M1?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M1:0:0;\n          NbTotalRoomNightsMay=  SplitTotalRoomAvailable['TotalRoomNightAvailable']?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M2?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M2:0:0;\n          NbTotalRoomNightsJune=  SplitTotalRoomAvailable['TotalRoomNightAvailable']?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M3?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M3:0:0;\n          NbTotalRoomNightsJuly=  SplitTotalRoomAvailable['TotalRoomNightAvailable']?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M4?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M4:0:0;\n          NbTotalRoomNightsAugust=  SplitTotalRoomAvailable['TotalRoomNightAvailable']?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M5?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M5:0:0;\n          NbTotalRoomNightsSeptember=  SplitTotalRoomAvailable['TotalRoomNightAvailable']?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M6?SplitTotalRoomAvailable['TotalRoomNightAvailable'].M6:0:0;\n        }\n\n        var SplitTotalRoomAvailable = result.data['SplitTotalRoomAvailable-total'];\n        var OccupancyRateApril = 0;\n        var OccupancyRateMay = 0;\n        var OccupancyRateJune = 0;\n        var OccupancyRateJuly = 0;\n        var OccupancyRateAugust = 0;\n        var OccupancyRateSeptember = 0;\n\n        if (SplitTotalRoomAvailable) {\n\n          OccupancyRateApril = SplitTotalRoomAvailable.M1?SplitTotalRoomAvailable.M1:0;\n          OccupancyRateMay = SplitTotalRoomAvailable.M2?SplitTotalRoomAvailable.M2:0;\n          OccupancyRateJune = SplitTotalRoomAvailable.M3?SplitTotalRoomAvailable.M3:0;\n          OccupancyRateJuly = SplitTotalRoomAvailable.M4?SplitTotalRoomAvailable.M4:0;\n          OccupancyRateAugust =SplitTotalRoomAvailable.M5?SplitTotalRoomAvailable.M5:0;\n          OccupancyRateSeptember =SplitTotalRoomAvailable.M6?SplitTotalRoomAvailable.M6:0;\n\n        }\n\n        //\n      var Result = result.data;\n        \n\n       \n       const resultSurvey = await API.graphql(graphqlOperation(createSurvey, {input:{ IsHotelClosed, IsHotelContainmentZone, HotelContainmentEndDate, HotelReopeningDate, \n          NbBookings, NbRoomNightsBooked, NbRoomNightsCanceled,\n          NbRoomNightsBookedFIT, NbRoomNightsBookedMICE, NbRoomNightsBookedCorporate, RemainingRoomNightsBySegment,\n          RoomNightsCountry1, NbRoomNightsBookedCountry1, RoomNightsCountry2, NbRoomNightsBookedCountry2, RoomNightsCountry3, NbRoomNightsBookedCountry3,\n          RoomNightsCountry4, NbRoomNightsBookedCountry4, RoomNightsCountry5, NbRoomNightsBookedCountry5, NbRoomNightsBookedLastWeekApril, NbRoomNightsBookedLastWeekMay,\n          NbRoomNightsBookedLastWeekAugust, NbRoomNightsBookedLastWeekSeptember, TotalNightsBookedLastWeek, NbRoomNightsBookedLastWeekJune, NbRoomNightsBookedLastWeekJuly,\n          TotalNumberRoomAvailable, NbOccupiedRoomNightsAvril,NbOccupiedRoomNightsAugust, NbOccupiedRoomNightsJuly, NbOccupiedRoomNightsJune, NbOccupiedRoomNightsMay,\n          NbOccupiedRoomNightsSeptember,NbTotalRoomNightsAugust, NbTotalRoomNightsAvril, NbTotalRoomNightsJuly, NbTotalRoomNightsJune, NbTotalRoomNightsMay, NbTotalRoomNightsSeptember, \n         OccupancyRateApril, OccupancyRateAugust, OccupancyRateJuly, OccupancyRateJune, OccupancyRateMay, OccupancyRateSeptember, Week, Result, HotelLocation\n        } }));\n\n        console.log(resultSurvey);\n        \n        if (NbRoomNightsBookedCountry1>0) {\n          await API.graphql(graphqlOperation(createClientCountry, {input:{'Country':RoomNightsCountry1, 'NumberOfClientBookings':NbRoomNightsBookedCountry1, Week }}));\n        }\n        if (NbRoomNightsBookedCountry2>0) {\n          await API.graphql(graphqlOperation(createClientCountry, {input:{'Country':RoomNightsCountry2, 'NumberOfClientBookings':NbRoomNightsBookedCountry2, Week }}));\n        }\n        if (NbRoomNightsBookedCountry3>0) {\n          await API.graphql(graphqlOperation(createClientCountry, {input:{'Country':RoomNightsCountry3, 'NumberOfClientBookings':NbRoomNightsBookedCountry3, Week }}));\n        }\n        if (NbRoomNightsBookedCountry4>0) {\n          await API.graphql(graphqlOperation(createClientCountry, {input:{'Country':RoomNightsCountry4, 'NumberOfClientBookings':NbRoomNightsBookedCountry4, Week }}));\n        }\n        if (NbRoomNightsBookedCountry5>0) {\n          await API.graphql(graphqlOperation(createClientCountry, {input:{'Country':RoomNightsCountry5, 'NumberOfClientBookings':NbRoomNightsBookedCountry5, Week }}));\n        }\n\n        //await API.graphql(graphqlOperation(createTracking, {input:{'Email':this.props.userAttributes.email, 'Sub':this.props.userAttributes.sub, Week }}));\n        \n        this.setState({ isCompleted: true});\n        history.push('/Final');\n      } else {\n        history.push('/FinalRetry');\n      }\n\n\n     \n    } catch (err) {\n      console.error(\"error during delete\", err);\n    }\n  }\n\n  render() {\n\n\n   \n    var json = (this.props.hotelLocation === \"\")? firstSurvey : finalSurvey;\n    \n\n    var surveyRender = !this.state.isCompleted ? (\n      <Survey.Survey\n        json={json}\n        //data={data}\n        showCompletedPage={false}\n        onComplete={this.onCompleteComponent}\n      />\n    ) : null;\n\n    \n    /*var onCompleteComponent = this.state.isCompleted ? (\n    ) : null;*/\n\n    return (\n      <div>\n        {surveyRender}\n      </div>\n    );\n  }\n}\n\nexport default SurveyComponent;","import React from \"react\";\nimport SurveyComponent from '../components/SurveyComponent';\nimport { UserContext} from '../AppWithAuth';\n\nclass HomePage extends React.Component {\n\n  render() {\n    return (\n        <UserContext.Consumer>\n        {({ userAttributes }) =>\n            <React.Fragment>\n                <div style={{marginTop:'30px'}}/>\n                <SurveyComponent userAttributes={userAttributes} hotelLocation={this.props.hotelLocation}/>\n                \n            </React.Fragment>\n        }\n        </UserContext.Consumer>\n    );\n  }\n}\n\nexport default HomePage;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Logo from '../images/GL-Group-BLACK-RVB.png';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    color :{\n        backgroundColor : '#f57c00',\n    },\n    root: {\n      flexGrow: 1,\n      alignContent:'center'\n      \n    },\n    menuButton: {\n      marginRight: theme.spacing(1),\n    },\n    title: {\n      flexGrow: 1,\n      textAlign : 'center',\n      marginRight : '20px',\n      color : 'black'\n    },\n  }));\n\nexport default function FinalStep (props) {\n     \n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <img src={Logo} alt=\"GLH Logo\" style={{height:'200px',display: 'block', margin:'auto', marginBottom:'30px'}}></img>\n            <Typography variant=\"h5\" className={classes.title}>\n                { props.message }\n            </Typography>\n        </div>\n   )\n};\n","import React from \"react\";\nimport FinalStep from '../components/FinalStep';\n\nclass FinalPage extends React.Component {\n\n  render() {\n    return (\n      <React.Fragment>\n          <div style={{marginTop:'30px'}}/>\n          <FinalStep message=\"Thank you for taking the time to complete this survey.\" />\n      </React.Fragment>\n   \n    );\n  }\n}\n\nexport default FinalPage;","import React from \"react\";\nimport FinalStep from '../components/FinalStep';\n\nclass FinalRetry extends React.Component {\n\n  render() {\n    return (\n      <React.Fragment>\n          <div style={{marginTop:'30px'}}/>\n          <FinalStep message=\"You already submitted your weekly survey. Survey cannot be submitted more than once per week. Should you have any question, please contact your account manager.\" />\n      </React.Fragment>\n   \n    );\n  }\n}\n\nexport default FinalRetry;","import React from \"react\";\nimport {Auth, Hub}  from 'aws-amplify';\nimport Navbar from './components/NavBar'\nimport Logo from './images/GL-Group-BLACK-RVB.jpg';\nimport { Authenticator } from \"aws-amplify-react\";\nimport { graphqlOperation, API } from \"aws-amplify\";\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport { listFirstLogins } from \"./graphql/queries\";\nimport { Router, Route} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport FinalPage from './pages/FinalPage';\nimport FinalRetry from './pages/FinalRetry';\nimport \"@aws-amplify/ui/dist/style.css\";\n\n\nexport const UserContext = React.createContext();\n\nexport const history = createBrowserHistory();\n\nclass AppWithAuth extends React.Component {\n  state = {\n      user : null,\n      userAttributes : null,\n      hotelLocation : \"\",\n  }\n\n  componentDidMount() {\n    this.getUserData();\n    Hub.listen('auth', this, 'onHubCapsule');\n  }\n\n  getUserData = async () => { \n    try {\n      \n        const user = await  Auth.currentAuthenticatedUser();\n        this.setState({ hotelLocation : '' })\n        console.log('Get User data : ' + user);\n        user ? this.setState({user}, () => this.getUserAttributes(this.state.user)) : this.setState({user : null});\n        console.log(user.attributes.sub);\n        const firstLogins = await API.graphql(graphqlOperation(listFirstLogins,  {\n          filter: {\n              Sub: {\n                  eq: user.attributes.sub\n              }\n          }\n        }));\n        console.log(firstLogins);\n        console.log(firstLogins.data.listFirstLogins.items);\n        if (firstLogins.data.listFirstLogins.items.length > 0) {\n          console.log(firstLogins.data.listFirstLogins.items[0].LocationHotel);\n          this.setState({ hotelLocation : firstLogins.data.listFirstLogins.items[0].LocationHotel })\n          console.log(this.state.hotelLocation);\n        }\n    } catch(err)\n    {\n      console.error('Error getting user data', err);\n    }\n  }\n\n  getUserAttributes = async authUserData  => {\n    const attributesArr = Auth.userAttributes(authUserData).then(data => {\n      const attributesObj = Auth.attributesToObject(data);\n      this.setState({ userAttributes : attributesObj });\n    });\n\n  }\n\n  handleSignOut = async () =>{\n    try {\n      history.push('/');\n      await Auth.signOut()\n    } catch(err){\n      console.error('Error signing out the user', err);\n    }\n  }\n\n  onHubCapsule = capsule => {\n    switch (capsule.payload.event) {\n      case \"signIn\" :\n        console.log('signed in');\n        console.log(capsule.payload.event);\n        console.log(this.state.userAttributes);\n        this.getUserData();\n        break;\n      case \"signUp\":\n          console.log('signed up');\n          console.log(capsule);\n        break;\n      case \"signOut\":\n        console.log('signed out');\n        this.setState({user: null});\n        break;\n      default : \n        return;\n    }\n  }\n\n \n\n  render() {\n\n    \n\n    const { user, userAttributes } = this.state;\n    \n    const signUpConfig = {\n        hiddenDefaults: [\"phone_number\"]\n        /*,\n        signUpFields: [\n            {\n                label: 'Hotel Name',\n                key: 'custom:HotelName',\n                required: true,\n                placeholder: 'Hotel Name',\n                type: 'string',\n                displayOrder: 4,\n              }\n        ]*/\n        //hideAllDefaults: true,\n        /*signUpFields: [\n            {\n                label: 'UserName',\n                key: 'username',\n                required: true,\n                placeholder: 'UserName',\n                type: 'email',\n                displayOrder: 1,\n              },\n          {\n            label: 'Email',\n            key: 'email',\n            required: true,\n            placeholder: 'Email',\n            type: 'email',\n            displayOrder: 2,\n          },\n          {\n            label: 'Password',\n            key: 'password',\n            required: true,\n            placeholder: 'Password',\n            type: 'password',\n            displayOrder: 3,\n          },\n          ,\n        ]*/,\n      }\n    return (\n        !user ?  (\n            <>\n            <div style={{alignContent:'center'}}>\n                <img src={Logo} alt=\"GLH Logo\" style={{width:'250px',display: 'block', margin: 'auto', marginBottom:'0px' , marginTop:'20px'}}></img>\n            </div>\n            <Authenticator signUpConfig={signUpConfig}/>\n            <div style={{margin: 'auto', width: '80%',border: '1px solid red',padding: '0px', textAlign:'center'}}>\n              <p><span  style={{fontWeight:600}}>IMPORTANT INFORMATION</span></p>\n              <p>\nThe information collected in this survey is completely anonymous. Your personal details will only be used to secure access to the interface, but never stored.\nThe objective of this Covid-19 monitoring tool is to enable our partner hotels to identify markets with signs of recovery, and to have a global overview of the situation. The results generated each week are for information purposes only and Grand Luxury assumes no liability or responsibility for their use.\n</p>\n            </div>\n            </>\n          ) : (\n            <UserContext.Provider value={{ user, userAttributes}}>\n                <Router history={history}> \n                    <React.Fragment>\n                        <Navbar user={user} handleSignOut={this.handleSignOut}/>\n                    \n                        <Route exact path=\"/\"  component={() => <HomePage user={user} userAttributes={userAttributes} hotelLocation={this.state.hotelLocation}/>} />\n                        <Route exact path=\"/Final\" component ={FinalPage} />\n                        <Route exact path=\"/FinalRetry\" component ={FinalRetry} />\n                    </React.Fragment>\n                </Router>\n            </UserContext.Provider>)\n  \n    );\n  }\n}\n\nexport default AppWithAuth;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Amplify from 'aws-amplify'\nimport config from './aws-exports'\nimport AppWithAuth from './AppWithAuth';\nimport './index.css';\nAmplify.configure(config)\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWithAuth />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}